var forest = (function (exports) {
	'use strict';

	function noop() {}

	function assign(tar, src) {
		for (var k in src) tar[k] = src[k];
		return tar;
	}

	function assignTrue(tar, src) {
		for (var k in src) tar[k] = 1;
		return tar;
	}

	function callAfter(fn, i) {
		if (i === 0) fn();
		return () => {
			if (!--i) fn();
		};
	}

	function addLoc(element, file, line, column, char) {
		element.__svelte_meta = {
			loc: { file, line, column, char }
		};
	}

	function appendNode(node, target) {
		target.appendChild(node);
	}

	function insertNode(node, target, anchor) {
		target.insertBefore(node, anchor);
	}

	function detachNode(node) {
		node.parentNode.removeChild(node);
	}

	function destroyEach(iterations, detach) {
		for (var i = 0; i < iterations.length; i += 1) {
			if (iterations[i]) iterations[i].d(detach);
		}
	}

	function createElement(name) {
		return document.createElement(name);
	}

	function createSvgElement(name) {
		return document.createElementNS('http://www.w3.org/2000/svg', name);
	}

	function createText(data) {
		return document.createTextNode(data);
	}

	function createComment() {
		return document.createComment('');
	}

	function addListener(node, event, handler) {
		node.addEventListener(event, handler, false);
	}

	function removeListener(node, event, handler) {
		node.removeEventListener(event, handler, false);
	}

	function setAttribute(node, attribute, value) {
		node.setAttribute(attribute, value);
	}

	function setXlinkAttribute(node, attribute, value) {
		node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);
	}

	function setData(text, data) {
		text.data = '' + data;
	}

	function setStyle(node, key, value) {
		node.style.setProperty(key, value);
	}

	function blankObject() {
		return Object.create(null);
	}

	function destroy(detach) {
		this.destroy = noop;
		this.fire('destroy');
		this.set = noop;

		this._fragment.d(detach !== false);
		this._fragment = null;
		this._state = {};
	}

	function destroyDev(detach) {
		destroy.call(this, detach);
		this.destroy = function() {
			console.warn('Component was already destroyed');
		};
	}

	function _differs(a, b) {
		return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
	}

	function fire(eventName, data) {
		var handlers =
			eventName in this._handlers && this._handlers[eventName].slice();
		if (!handlers) return;

		for (var i = 0; i < handlers.length; i += 1) {
			var handler = handlers[i];

			if (!handler.__calling) {
				try {
					handler.__calling = true;
					handler.call(this, data);
				} finally {
					handler.__calling = false;
				}
			}
		}
	}

	function get() {
		return this._state;
	}

	function init(component, options) {
		component._handlers = blankObject();
		component._bind = options._bind;

		component.options = options;
		component.root = options.root || component;
		component.store = options.store || component.root.store;
	}

	function on(eventName, handler) {
		var handlers = this._handlers[eventName] || (this._handlers[eventName] = []);
		handlers.push(handler);

		return {
			cancel: function() {
				var index = handlers.indexOf(handler);
				if (~index) handlers.splice(index, 1);
			}
		};
	}

	function run(fn) {
		fn();
	}

	function set(newState) {
		this._set(assign({}, newState));
		if (this.root._lock) return;
		this.root._lock = true;
		callAll(this.root._beforecreate);
		callAll(this.root._oncreate);
		callAll(this.root._aftercreate);
		this.root._lock = false;
	}

	function _set(newState) {
		var oldState = this._state,
			changed = {},
			dirty = false;

		for (var key in newState) {
			if (this._differs(newState[key], oldState[key])) changed[key] = dirty = true;
		}
		if (!dirty) return;

		this._state = assign(assign({}, oldState), newState);
		this._recompute(changed, this._state);
		if (this._bind) this._bind(changed, this._state);

		if (this._fragment) {
			this.fire("state", { changed: changed, current: this._state, previous: oldState });
			this._fragment.p(changed, this._state);
			this.fire("update", { changed: changed, current: this._state, previous: oldState });
		}
	}

	function setDev(newState) {
		if (typeof newState !== 'object') {
			throw new Error(
				this._debugName + '.set was called without an object of data key-values to update.'
			);
		}

		this._checkReadOnly(newState);
		set.call(this, newState);
	}

	function callAll(fns) {
		while (fns && fns.length) fns.shift()();
	}

	function _mount(target, anchor) {
		this._fragment[this._fragment.i ? 'i' : 'm'](target, anchor || null);
	}

	var protoDev = {
		destroy: destroyDev,
		get,
		fire,
		on,
		set: setDev,
		_recompute: noop,
		_set,
		_mount,
		_differs
	};

	/* src\SelectInput.html generated by Svelte v2.9.10 */

	function data() {
		return {
			title: '',
			value: '',
			colName: '',
			clicked: false,
			cols: []
		};
	}
	var methods = {
		updateCols() {
			const { key } = this.get();
			const { params } = this.root.get();
			let attr = params[key];
			//attr.cols = cols;
			if (attr.title === undefined) { attr.title = attr.value; }
			this.set(attr);
		}
	};

	function oncreate() {
		this.updateCols();
		// const { key } = this.get();
		// const { params, cols } = this.root.get();
		// let attr = params[key];
		// attr.cols = cols;
		// if (attr.title === undefined) { attr.title = attr.value; }
		// this.set(attr);
	// console.log('_____', key, attr);
	}
	function onstate({ changed, current, previous }) {
		console.log('______ onstate', changed, current.clicked);
		// if ((changed.clicked || changed.version) && current.clicked) {
	// console.log('__ddddd____ onstate', changed, current.clicked);
			// this.updateCols();
			// this.set({cols: current.gmxMap.layersByID[current.layerId].getGmxProperties().attributes});
		// }
	}
	const file = "src\\SelectInput.html";

	function create_main_fragment(component, ctx) {
		var div, div_1, text, text_1, div_2, div_3, text_2, button, current;

		function select_block_type(ctx) {
			if (ctx.clicked) return create_if_block;
			return create_if_block_1;
		}

		var current_block_type = select_block_type(ctx);
		var if_block = current_block_type(component, ctx);

		function click_handler(event) {
			component.set({clicked: !ctx.clicked});
		}

		return {
			c: function create() {
				div = createElement("div");
				div_1 = createElement("div");
				text = createText(ctx.title);
				text_1 = createText("\n\t");
				div_2 = createElement("div");
				div_3 = createElement("div");
				if_block.c();
				text_2 = createText("\n\t\t\t");
				button = createElement("button");
				div_1.className = "gmx-sidebar-label svelte-1qsv1jq";
				addLoc(div_1, file, 44, 1, 1085);
				addListener(button, "click", click_handler);
				button.className = "gmx-addon-button svelte-1qsv1jq";
				button.title = "выбрать из таблицы атрибутов";
				addLoc(button, file, 56, 3, 1526);
				addLoc(div_3, file, 46, 2, 1139);
				addLoc(div_2, file, 45, 1, 1131);
				div.className = "gmx-sidebar-labeled-block svelte-1qsv1jq";
				addLoc(div, file, 43, 0, 1044);
			},

			m: function mount(target, anchor) {
				insertNode(div, target, anchor);
				appendNode(div_1, div);
				appendNode(text, div_1);
				appendNode(text_1, div);
				appendNode(div_2, div);
				appendNode(div_3, div_2);
				if_block.m(div_3, null);
				appendNode(text_2, div_3);
				appendNode(button, div_3);
				current = true;
			},

			p: function update(changed, _ctx) {
				ctx = _ctx;
				if (changed.title) {
					setData(text, ctx.title);
				}

				if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
					if_block.p(changed, ctx);
				} else {
					if_block.d(1);
					if_block = current_block_type(component, ctx);
					if_block.c();
					if_block.m(div_3, text_2);
				}
			},

			i: function intro(target, anchor) {
				if (current) return;

				this.m(target, anchor);
			},

			o: run,

			d: function destroy$$1(detach) {
				if (detach) {
					detachNode(div);
				}

				if_block.d();
				removeListener(button, "click", click_handler);
			}
		};
	}

	// (50:5) {#each cols as it}
	function create_each_block(component, ctx) {
		var option, text_value = ctx.it, text, option_value_value, option_selected_value;

		return {
			c: function create() {
				option = createElement("option");
				text = createText(text_value);
				option.__value = option_value_value = ctx.it;
				option.value = option.__value;
				option.selected = option_selected_value = ctx.colName === ctx.it;
				addLoc(option, file, 50, 6, 1323);
			},

			m: function mount(target, anchor) {
				insertNode(option, target, anchor);
				appendNode(text, option);
			},

			p: function update(changed, ctx) {
				if ((changed.cols) && text_value !== (text_value = ctx.it)) {
					setData(text, text_value);
				}

				if ((changed.cols) && option_value_value !== (option_value_value = ctx.it)) {
					option.__value = option_value_value;
				}

				option.value = option.__value;
				if ((changed.colName || changed.cols) && option_selected_value !== (option_selected_value = ctx.colName === ctx.it)) {
					option.selected = option_selected_value;
				}
			},

			d: function destroy$$1(detach) {
				if (detach) {
					detachNode(option);
				}
			}
		};
	}

	// (48:3) {#if clicked}
	function create_if_block(component, ctx) {
		var select;

		var each_value = ctx.cols;

		var each_blocks = [];

		for (var i = 0; i < each_value.length; i += 1) {
			each_blocks[i] = create_each_block(component, get_each_context(ctx, each_value, i));
		}

		function change_handler(event) {
			component.set({colName: this.options[this.selectedIndex].value});
		}

		return {
			c: function create() {
				select = createElement("select");

				for (var i = 0; i < each_blocks.length; i += 1) {
					each_blocks[i].c();
				}
				addListener(select, "change", change_handler);
				select.name = ctx.key;
				select.className = "gmx-sidebar-select-with-addon svelte-1qsv1jq";
				addLoc(select, file, 48, 4, 1166);
			},

			m: function mount(target, anchor) {
				insertNode(select, target, anchor);

				for (var i = 0; i < each_blocks.length; i += 1) {
					each_blocks[i].m(select, null);
				}
			},

			p: function update(changed, ctx) {
				if (changed.cols || changed.colName) {
					each_value = ctx.cols;

					for (var i = 0; i < each_value.length; i += 1) {
						const child_ctx = get_each_context(ctx, each_value, i);

						if (each_blocks[i]) {
							each_blocks[i].p(changed, child_ctx);
						} else {
							each_blocks[i] = create_each_block(component, child_ctx);
							each_blocks[i].c();
							each_blocks[i].m(select, null);
						}
					}

					for (; i < each_blocks.length; i += 1) {
						each_blocks[i].d(1);
					}
					each_blocks.length = each_value.length;
				}

				if (changed.key) {
					select.name = ctx.key;
				}
			},

			d: function destroy$$1(detach) {
				if (detach) {
					detachNode(select);
				}

				destroyEach(each_blocks, detach);

				removeListener(select, "change", change_handler);
			}
		};
	}

	// (54:3) {:else}
	function create_if_block_1(component, ctx) {
		var input;

		return {
			c: function create() {
				input = createElement("input");
				setAttribute(input, "type", "text");
				input.className = "gmx-sidebar-input-with-addon svelte-1qsv1jq";
				input.name = ctx.key;
				input.value = ctx.value;
				addLoc(input, file, 54, 4, 1428);
			},

			m: function mount(target, anchor) {
				insertNode(input, target, anchor);
			},

			p: function update(changed, ctx) {
				if (changed.key) {
					input.name = ctx.key;
				}

				if (changed.value) {
					input.value = ctx.value;
				}
			},

			d: function destroy$$1(detach) {
				if (detach) {
					detachNode(input);
				}
			}
		};
	}

	function get_each_context(ctx, list, i) {
		const child_ctx = Object.create(ctx);
		child_ctx.it = list[i];
		child_ctx.each_value = list;
		child_ctx.it_index = i;
		return child_ctx;
	}

	function SelectInput(options) {
		this._debugName = '<SelectInput>';
		if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
		init(this, options);
		this._state = assign(data(), options.data);
		if (!('title' in this._state)) console.warn("<SelectInput> was created without expected data property 'title'");
		if (!('clicked' in this._state)) console.warn("<SelectInput> was created without expected data property 'clicked'");
		if (!('key' in this._state)) console.warn("<SelectInput> was created without expected data property 'key'");
		if (!('cols' in this._state)) console.warn("<SelectInput> was created without expected data property 'cols'");
		if (!('colName' in this._state)) console.warn("<SelectInput> was created without expected data property 'colName'");
		if (!('value' in this._state)) console.warn("<SelectInput> was created without expected data property 'value'");
		this._intro = !!options.intro;

		this._handlers.state = [onstate];

		if (!options.root) {
			this._oncreate = [];
		}

		this._fragment = create_main_fragment(this, this._state);

		this.root._oncreate.push(() => {
			onstate.call(this, { changed: assignTrue({}, this._state), current: this._state });
			oncreate.call(this);
			this.fire("update", { changed: assignTrue({}, this._state), current: this._state });
		});

		if (options.target) {
			if (options.hydrate) throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
			this._fragment.c();
			this._mount(options.target, options.anchor);

			callAll(this._oncreate);
		}

		this._intro = true;
	}

	assign(SelectInput.prototype, protoDev);
	assign(SelectInput.prototype, methods);

	SelectInput.prototype._checkReadOnly = function _checkReadOnly(newState) {
	};

	/* src\App.html generated by Svelte v2.9.10 */

	const serverBase = window.serverBase || '//maps.kosmosnimki.ru/';

	function data$1() {
		return {
			params: {
				layerId: {value: '', title: 'Выбор слоя'},
				quadrantLayerId: {value: '', title: 'Слой квартальной сети'},
				reportType: {options: ['об использовании лесов', 'о восстановлении лесов'], title: 'Тип отчета'},
				organizationName: {value: 'Наименование организации'},
				inn: {value: '1234567890', title: 'ИНН'},
				region: {value: 'Субъект', title: 'Субъект Российской Федерации'},
				forestry: {value: 'Лесничество'},
				sectionForestry: {value: 'Участковое лесничество'},
				quadrant: {value: 'Квартал'},
				stratum: {value: 'Выдел'},
				fellingForm: {value: '', title: 'Форма рубки'},
				fellingType: {value: '', title: 'Тип рубки'},
				recoveryEventType: {value: '', title: 'Тип мероприятия'},
				siteArea: {value: 'Площадь'},
				scale: {value: 'Масштаб'},
				site: {value: 'Делянка'}
			},
			layerItems: [],
			limit: 0,
			layerId: '',
			reportType: '',
			layerIds: [], quadrantIds: [],
			cols: []
		}
	}
	var methods$1 = {
	 			loadFeatures(id) {
	 				return fetch(`${serverBase}VectorLayer/Search.ashx?layer=${id}&WrapStyle=None`, {
					mode: 'cors',
					credentials: 'include'
				})
				.then(res => res.json())
				.then(json => {
	// console.log(json)
					if (json.Status === 'ok') {
						this.set({cols: json.Result.fields, layerItems: json.Result.values});
						// this.set({version: id});
					}
				})
				.catch(err => console.log(err));
		},
		getReportsCount() {
			// const url = `${serverBase}plugins/forestreport/rest/GetCurrentUserInfo?WrapStyle=None`,
				// options = {
					// body: JSON.stringify({WrapStyle: 'None'}),
					// method: 'post',
					// mode: 'cors',
					// credentials: 'include'
					// ,
					// headers: {
						// 'Accept': 'application/json'
					// }
				// };

			return fetch(`${serverBase}plugins/forestreport/rest/GetCurrentUserInfo?WrapStyle=None`, {
					mode: 'cors',
					credentials: 'include'
				})
				.then(res => res.json())
				.then(json => {
					if (json.Status === 'ok') {
						let count = json.Result.limit - json.Result.used;
						this.set({limit: count > 0 ? count : 0});
					}
				})
				.catch(err => console.log(err));
		}
		// getParam(key) {
			// const { params } = this.get();
			// console.log('getParam', params);
		// },
		// chkLayer: function(sel) {
			// console.log('chkLayer', sel, this);
			// this.set({layerId: sel.options[sel.selectedIndex].value});
		// },
		// click(row) {
			// dataGrid.click(this, row)
		// },
		// exportExcel() {
			// dataGrid.exportExcel(this);
		// },
		// print() {
			// dataGrid.print(this);
		// },
		// sort(index) {
			// if (index > -1) {
				// dataGrid.setSortIcon(this, index);
				// const { columns, sortType } = this.get();
				// this.getPaged({colName: columns[index].field, direction: sortType});				
			// }
		// },
	};

	function oncreate$1() {
		const { meta, gmxMap } = this.get();
		this.getReportsCount();
	console.log('in oncreate', gmxMap);
		let layerIds = [], quadrantIds = [];
		gmxMap.layers.forEach((it) => {
			if (it.getGmxProperties) {
				let props = it.getGmxProperties(),
					metaProps = props.MetaProperties || {};
				if (
					props.type.toLowerCase() === 'vector' &&
					props.GeometryType.toLowerCase() === 'polygon' &&
					!props.IsRasterCatalog &&
					!props.Quicklook
					) {
					let hash$$1 = {id: props.name, title: props.title};
					if (meta) {
						if (metaProps.forest && metaProps.forest.Value === 'true') {
							layerIds.push(hash$$1);
						}
						if (metaProps.quadrant && metaProps.quadrant.Value === 'true') {
							quadrantIds.push(hash$$1);
						}
					} else {
						layerIds.push(hash$$1);
						quadrantIds.push(hash$$1);
					}
				}
			}
		});
		this.set({layerIds: layerIds, quadrantIds: quadrantIds, cols: []});
		// if (process== 'server') {
			// grid = server.oncreate.call(this, server);
		// } else {
			// grid = local.oncreate.call(this, local);
		// }
		
		// dataGrid.setPerPageOptions(grid);
	}
	function ondestroy() {
		console.log('in ondestroy', this);
	}
	function onstate$1({ changed, current, previous }) {
		console.log('in onstate', this);
		if (changed.layerId && current.layerId) {
			this.loadFeatures(current.layerId);
			// this.set({cols: current.gmxMap.layersByID[current.layerId].getGmxProperties().attributes});
		}
	}
	function onupdate({ changed, current, previous }) {
		console.log('in onupdate', this);
		// if (changed.currentPerPage) {
			// this.getPaged({size: currentPerPage});
		// }	        
		// if (changed.searchInput) {
			// debounce((x) => {
				// console.log('searchInput changed', x);
				// this.getPaged({ searchText: x });
			// }, 250)();
		// }	        
		// if (changed.selectedPage) {
			// const newPage = selectedPage + 1;
			// this.getPaged({ page: newPage }, x => x.page != newPage);
		// }   	        
	}
	const file$1 = "src\\App.html";

	function create_main_fragment$1(component, ctx) {
		var div, div_1, text, text_1, div_2, text_2, text_3, text_4, div_3, span, text_5, text_6, select, option, text_8, current;

		var if_block = (ctx.layerIds) && create_if_block$1(component, ctx);

		function change_handler(event) {
			component.set({layerId: this.options[this.selectedIndex].value});
		}

		var if_block_1 = (ctx.layerId) && create_if_block_1$1(component, ctx);

		return {
			c: function create() {
				div = createElement("div");
				div_1 = createElement("div");
				text = createText("Отчет об использовании лесов");
				text_1 = createText("\n\t");
				div_2 = createElement("div");
				text_2 = createText("Лимит отчетов: ");
				text_3 = createText(ctx.limit);
				text_4 = createText("\n\t");
				div_3 = createElement("div");
				span = createElement("span");
				text_5 = createText("Выбор слоя");
				text_6 = createText("\n\t\t");
				select = createElement("select");
				option = createElement("option");
				if (if_block) if_block.c();
				text_8 = createText("\n");
				if (if_block_1) if_block_1.c();
				div_1.className = "forest-plugin-header svelte-v3r55e";
				addLoc(div_1, file$1, 190, 1, 5546);
				div_2.className = "forest-plugin-header svelte-v3r55e";
				addLoc(div_2, file$1, 191, 1, 5616);
				span.className = "gmx-select-layer-container__label svelte-v3r55e";
				addLoc(span, file$1, 193, 2, 5723);
				option.__value = "";
				option.value = option.__value;
				option.className = "svelte-v3r55e";
				addLoc(option, file$1, 195, 3, 5904);
				addListener(select, "change", change_handler);
				select.className = "gmx-sidebar-select-medium svelte-v3r55e";
				addLoc(select, file$1, 194, 2, 5791);
				div_3.className = "gmx-select-layer-container svelte-v3r55e";
				addLoc(div_3, file$1, 192, 1, 5680);
				div.dataset.reactroot = "";
				div.className = "forest-plugin-container svelte-v3r55e";
				addLoc(div, file$1, 189, 0, 5489);
			},

			m: function mount(target, anchor) {
				insertNode(div, target, anchor);
				appendNode(div_1, div);
				appendNode(text, div_1);
				appendNode(text_1, div);
				appendNode(div_2, div);
				appendNode(text_2, div_2);
				appendNode(text_3, div_2);
				appendNode(text_4, div);
				appendNode(div_3, div);
				appendNode(span, div_3);
				appendNode(text_5, span);
				appendNode(text_6, div_3);
				appendNode(select, div_3);
				appendNode(option, select);
				if (if_block) if_block.m(select, null);
				appendNode(text_8, div);
				if (if_block_1) if_block_1.m(div, null);
				current = true;
			},

			p: function update(changed, ctx) {
				if (!current || changed.limit) {
					setData(text_3, ctx.limit);
				}

				if (ctx.layerIds) {
					if (if_block) {
						if_block.p(changed, ctx);
					} else {
						if_block = create_if_block$1(component, ctx);
						if_block.c();
						if_block.m(select, null);
					}
				} else if (if_block) {
					if_block.d(1);
					if_block = null;
				}

				if (ctx.layerId) {
					if (if_block_1) {
						if_block_1.p(changed, ctx);
					} else {
						if_block_1 = create_if_block_1$1(component, ctx);
						if (if_block_1) if_block_1.c();
					}

					if_block_1.i(div, null);
				} else if (if_block_1) {
					if_block_1.o(function() {
						if_block_1.d(1);
						if_block_1 = null;
					});
				}
			},

			i: function intro(target, anchor) {
				if (current) return;

				this.m(target, anchor);
			},

			o: function outro(outrocallback) {
				if (!current) return;

				if (if_block_1) if_block_1.o(outrocallback);
				else outrocallback();

				current = false;
			},

			d: function destroy$$1(detach) {
				if (detach) {
					detachNode(div);
				}

				if (if_block) if_block.d();
				removeListener(select, "change", change_handler);
				if (if_block_1) if_block_1.d();
			}
		};
	}

	// (198:4) {#each layerIds as it}
	function create_each_block$1(component, ctx) {
		var option, text_value = ctx.it.title, text, option_value_value, option_selected_value;

		return {
			c: function create() {
				option = createElement("option");
				text = createText(text_value);
				option.__value = option_value_value = ctx.it.id;
				option.value = option.__value;
				option.selected = option_selected_value = ctx.layerId === ctx.it.id;
				option.className = "svelte-v3r55e";
				addLoc(option, file$1, 198, 5, 5981);
			},

			m: function mount(target, anchor) {
				insertNode(option, target, anchor);
				appendNode(text, option);
			},

			p: function update(changed, ctx) {
				if ((changed.layerIds) && text_value !== (text_value = ctx.it.title)) {
					setData(text, text_value);
				}

				if ((changed.layerIds) && option_value_value !== (option_value_value = ctx.it.id)) {
					option.__value = option_value_value;
				}

				option.value = option.__value;
				if ((changed.layerId || changed.layerIds) && option_selected_value !== (option_selected_value = ctx.layerId === ctx.it.id)) {
					option.selected = option_selected_value;
				}
			},

			d: function destroy$$1(detach) {
				if (detach) {
					detachNode(option);
				}
			}
		};
	}

	// (197:3) {#if layerIds}
	function create_if_block$1(component, ctx) {
		var each_anchor;

		var each_value = ctx.layerIds;

		var each_blocks = [];

		for (var i = 0; i < each_value.length; i += 1) {
			each_blocks[i] = create_each_block$1(component, get_each_context$1(ctx, each_value, i));
		}

		return {
			c: function create() {
				for (var i = 0; i < each_blocks.length; i += 1) {
					each_blocks[i].c();
				}

				each_anchor = createComment();
			},

			m: function mount(target, anchor) {
				for (var i = 0; i < each_blocks.length; i += 1) {
					each_blocks[i].m(target, anchor);
				}

				insertNode(each_anchor, target, anchor);
			},

			p: function update(changed, ctx) {
				if (changed.layerIds || changed.layerId) {
					each_value = ctx.layerIds;

					for (var i = 0; i < each_value.length; i += 1) {
						const child_ctx = get_each_context$1(ctx, each_value, i);

						if (each_blocks[i]) {
							each_blocks[i].p(changed, child_ctx);
						} else {
							each_blocks[i] = create_each_block$1(component, child_ctx);
							each_blocks[i].c();
							each_blocks[i].m(each_anchor.parentNode, each_anchor);
						}
					}

					for (; i < each_blocks.length; i += 1) {
						each_blocks[i].d(1);
					}
					each_blocks.length = each_value.length;
				}
			},

			d: function destroy$$1(detach) {
				destroyEach(each_blocks, detach);

				if (detach) {
					detachNode(each_anchor);
				}
			}
		};
	}

	// (213:7) {#each params.reportType.options as it}
	function create_each_block_1(component, ctx) {
		var option, text_value = ctx.it, text, option_value_value;

		return {
			c: function create() {
				option = createElement("option");
				text = createText(text_value);
				option.__value = option_value_value = ctx.it;
				option.value = option.__value;
				option.className = "svelte-v3r55e";
				addLoc(option, file$1, 213, 8, 6555);
			},

			m: function mount(target, anchor) {
				insertNode(option, target, anchor);
				appendNode(text, option);
			},

			p: function update(changed, ctx) {
				if ((changed.params) && text_value !== (text_value = ctx.it)) {
					setData(text, text_value);
				}

				if ((changed.params) && option_value_value !== (option_value_value = ctx.it)) {
					option.__value = option_value_value;
				}

				option.value = option.__value;
			},

			d: function destroy$$1(detach) {
				if (detach) {
					detachNode(option);
				}
			}
		};
	}

	// (219:5) {#if reportType !== 'о восстановлении лесов'}
	function create_if_block_2(component, ctx) {
		var div, text, current;

		var selectinput_initial_data = { key: "fellingForm", cols: ctx.cols };
		var selectinput = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_initial_data
		});

		var selectinput_1_initial_data = { key: "fellingType", cols: ctx.cols };
		var selectinput_1 = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_1_initial_data
		});

		return {
			c: function create() {
				div = createElement("div");
				selectinput._fragment.c();
				text = createText("\n\t\t\t\t\t\t");
				selectinput_1._fragment.c();
				addLoc(div, file$1, 219, 5, 6690);
			},

			m: function mount(target, anchor) {
				insertNode(div, target, anchor);
				selectinput._mount(div, null);
				appendNode(text, div);
				selectinput_1._mount(div, null);
				current = true;
			},

			p: function update(changed, ctx) {
				var selectinput_changes = {};
				if (changed.cols) selectinput_changes.cols = ctx.cols;
				selectinput._set(selectinput_changes);

				var selectinput_1_changes = {};
				if (changed.cols) selectinput_1_changes.cols = ctx.cols;
				selectinput_1._set(selectinput_1_changes);
			},

			i: function intro(target, anchor) {
				if (current) return;

				this.m(target, anchor);
			},

			o: function outro(outrocallback) {
				if (!current) return;

				outrocallback = callAfter(outrocallback, 2);

				selectinput._fragment.o(outrocallback);
				selectinput_1._fragment.o(outrocallback);
				current = false;
			},

			d: function destroy$$1(detach) {
				if (detach) {
					detachNode(div);
				}

				selectinput.destroy();
				selectinput_1.destroy();
			}
		};
	}

	// (249:8) {#each quadrantIds as it}
	function create_each_block_2(component, ctx) {
		var option, text_value = ctx.it.title, text, option_value_value, option_selected_value;

		return {
			c: function create() {
				option = createElement("option");
				text = createText(text_value);
				option.__value = option_value_value = ctx.it.id;
				option.value = option.__value;
				option.selected = option_selected_value = ctx.quadrantId === ctx.it.id;
				option.className = "svelte-v3r55e";
				addLoc(option, file$1, 249, 9, 8023);
			},

			m: function mount(target, anchor) {
				insertNode(option, target, anchor);
				appendNode(text, option);
			},

			p: function update(changed, ctx) {
				if ((changed.quadrantIds) && text_value !== (text_value = ctx.it.title)) {
					setData(text, text_value);
				}

				if ((changed.quadrantIds) && option_value_value !== (option_value_value = ctx.it.id)) {
					option.__value = option_value_value;
				}

				option.value = option.__value;
				if ((changed.quadrantId || changed.quadrantIds) && option_selected_value !== (option_selected_value = ctx.quadrantId === ctx.it.id)) {
					option.selected = option_selected_value;
				}
			},

			d: function destroy$$1(detach) {
				if (detach) {
					detachNode(option);
				}
			}
		};
	}

	// (248:7) {#if quadrantIds}
	function create_if_block_3(component, ctx) {
		var each_anchor;

		var each_value_2 = ctx.quadrantIds;

		var each_blocks = [];

		for (var i = 0; i < each_value_2.length; i += 1) {
			each_blocks[i] = create_each_block_2(component, get_each_context_2(ctx, each_value_2, i));
		}

		return {
			c: function create() {
				for (var i = 0; i < each_blocks.length; i += 1) {
					each_blocks[i].c();
				}

				each_anchor = createComment();
			},

			m: function mount(target, anchor) {
				for (var i = 0; i < each_blocks.length; i += 1) {
					each_blocks[i].m(target, anchor);
				}

				insertNode(each_anchor, target, anchor);
			},

			p: function update(changed, ctx) {
				if (changed.quadrantIds || changed.quadrantId) {
					each_value_2 = ctx.quadrantIds;

					for (var i = 0; i < each_value_2.length; i += 1) {
						const child_ctx = get_each_context_2(ctx, each_value_2, i);

						if (each_blocks[i]) {
							each_blocks[i].p(changed, child_ctx);
						} else {
							each_blocks[i] = create_each_block_2(component, child_ctx);
							each_blocks[i].c();
							each_blocks[i].m(each_anchor.parentNode, each_anchor);
						}
					}

					for (; i < each_blocks.length; i += 1) {
						each_blocks[i].d(1);
					}
					each_blocks.length = each_value_2.length;
				}
			},

			d: function destroy$$1(detach) {
				destroyEach(each_blocks, detach);

				if (detach) {
					detachNode(each_anchor);
				}
			}
		};
	}

	// (204:0) {#if layerId}
	function create_if_block_1$1(component, ctx) {
		var div, div_1, div_2, text, text_1, div_3, div_4, div_5, div_6, text_2_value = ctx.params.reportType.title, text_2, text_3, select, text_5, text_6, div_7, div_8, text_7, text_8, input, text_10, div_9, div_10, text_11, text_12, input_1, text_14, text_15, text_16, text_17, text_18, text_19, text_20, text_21, text_22, text_23, div_11, div_12, text_24, text_25, select_1, option, text_29, div_13, text_30, text_31, div_14, div_15, div_16, button, text_32, text_33, div_17, text_34, text_35_value = ctx.layerItems.length, text_35, text_36, div_18, div_19, input_2, text_37, text_39, div_20, table, tr, th, input_3, text_40, th_1, span, text_41, text_42, th_2, span_1, text_43, text_45, tr_1, td, input_4, text_46, td_1, span_2, text_47, text_48, td_2, span_3, span_4, svg, use, text_50, tr_2, td_3, input_5, text_51, td_4, span_5, text_52, text_53, td_5, span_6, span_7, svg_1, use_1, text_55, tr_3, td_6, input_6, text_56, td_7, span_8, text_57, text_58, td_8, span_9, span_10, svg_2, use_2, text_60, tr_4, td_9, button_1, text_61, text_62, span_11, text_63, input_7, text_64, text_65, button_2, text_66, text_71, div_21, div_22, div_23, div_24, div_25, div_26, div_27, input_8, text_73, div_28, text_75, div_29, div_30, span_12, text_76, text_77, div_31, text_79, div_32, div_33, span_13, text_80, text_81, div_34, text_83, div_35, div_36, text_84, div_37, text_88, div_38, div_39, div_40, div_41, div_42, input_9, text_90, div_43, text_91, text_92, div_44, div_45, text_94, div_46, div_47, svg_3, use_3, text_98, div_48, div_49, div_50, div_51, input_10, text_99, div_52, text_100, text_101, div_53, div_54, text_102, div_55, div_56, svg_4, use_4, text_103, div_57, div_58, div_59, div_60, input_11, text_104, div_61, text_105, text_106, div_62, div_63, text_107, div_64, div_65, svg_5, use_5, text_108, div_66, div_67, div_68, div_69, input_12, text_109, div_70, text_110, text_111, div_71, div_72, text_112, div_73, div_74, svg_6, use_6, text_113, div_75, div_76, div_77, div_78, input_13, text_114, div_79, text_115, text_116, div_80, div_81, text_117, div_82, div_83, svg_7, use_7, text_118, div_84, div_85, div_86, div_87, input_14, text_119, div_88, text_120, text_121, div_89, div_90, text_122, div_91, div_92, svg_8, use_8, text_123, div_93, div_94, div_95, div_96, input_15, text_124, div_97, text_125, text_126, div_98, div_99, text_127, div_100, div_101, svg_9, use_9, text_128, div_102, div_103, div_104, div_105, input_16, text_129, div_106, text_130, text_131, div_107, div_108, text_132, div_109, div_110, svg_10, use_10, text_133, div_111, div_112, div_113, div_114, input_17, text_134, div_115, text_135, text_136, div_116, div_117, text_137, div_118, div_119, svg_11, use_11, text_138, div_120, div_121, div_122, div_123, input_18, text_139, div_124, text_140, text_141, div_125, div_126, text_142, div_127, div_128, svg_12, use_12, text_143, div_129, div_130, div_131, div_132, input_19, text_144, div_133, text_145, text_146, div_134, div_135, text_147, div_136, div_137, svg_13, use_13, text_148, div_138, div_139, div_140, div_141, input_20, text_149, div_142, text_150, text_151, div_143, div_144, text_152, div_145, div_146, svg_14, use_14, text_153, div_147, div_148, div_149, div_150, input_21, text_154, div_151, text_155, text_156, div_152, div_153, text_157, div_154, div_155, svg_15, use_15, text_158, div_156, div_157, div_158, div_159, input_22, text_159, div_160, text_160, text_161, div_161, div_162, text_162, div_163, div_164, svg_16, use_16, text_163, div_165, div_166, div_167, div_168, input_23, text_164, div_169, text_165, text_166, div_170, div_171, text_167, div_172, div_173, svg_17, use_17, text_169, div_174, div_175, div_176, button_3, text_170, text_171, div_177, span_14, text_172, div_178, input_24, text_173, span_15, text_174, text_175, div_179, button_4, text_176, text_177, div_180, div_181, text_178, div_182, button_5, text_179, current;

		var each_value_1 = ctx.params.reportType.options;

		var each_blocks = [];

		for (var i = 0; i < each_value_1.length; i += 1) {
			each_blocks[i] = create_each_block_1(component, get_each_context_1(ctx, each_value_1, i));
		}

		function change_handler(event) {
			component.set({reportType: this.options[this.selectedIndex].value});
		}

		var if_block = (ctx.reportType !== 'о восстановлении лесов') && create_if_block_2(component, ctx);

		var selectinput_initial_data = { key: "region", cols: ctx.cols };
		var selectinput = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_initial_data
		});

		var selectinput_1_initial_data = { key: "forestry", cols: ctx.cols };
		var selectinput_1 = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_1_initial_data
		});

		var selectinput_2_initial_data = {
		 	key: "sectionForestry",
		 	cols: ctx.cols
		 };
		var selectinput_2 = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_2_initial_data
		});

		var selectinput_3_initial_data = { key: "quadrant", cols: ctx.cols };
		var selectinput_3 = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_3_initial_data
		});

		var selectinput_4_initial_data = { key: "stratum", cols: ctx.cols };
		var selectinput_4 = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_4_initial_data
		});

		var selectinput_5_initial_data = { key: "site", cols: ctx.cols };
		var selectinput_5 = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_5_initial_data
		});

		var selectinput_6_initial_data = {
		 	key: "recoveryEventType",
		 	cols: ctx.cols
		 };
		var selectinput_6 = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_6_initial_data
		});

		var selectinput_7_initial_data = { key: "siteArea", cols: ctx.cols };
		var selectinput_7 = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_7_initial_data
		});

		var selectinput_8_initial_data = { key: "scale", cols: ctx.cols };
		var selectinput_8 = new SelectInput({
			root: component.root,
			store: component.store,
			data: selectinput_8_initial_data
		});

		var if_block_1 = (ctx.quadrantIds) && create_if_block_3(component, ctx);

		function click_handler(event) {
			component.set({quadrantId: this.options[this.selectedIndex].value});
		}

		return {
			c: function create() {
				div = createElement("div");
				div_1 = createElement("div");
				div_2 = createElement("div");
				text = createText("Ввод информации");
				text_1 = createText("\n\t\t\t");
				div_3 = createElement("div");
				div_4 = createElement("div");
				div_5 = createElement("div");
				div_6 = createElement("div");
				text_2 = createText(text_2_value);
				text_3 = createText("\n\t\t\t\t\t\t");
				select = createElement("select");

				for (var i = 0; i < each_blocks.length; i += 1) {
					each_blocks[i].c();
				}

				text_5 = createText("\n\t\t\t\t\t");
				if (if_block) if_block.c();
				text_6 = createText("\n\t\t\t\t\t");
				div_7 = createElement("div");
				div_8 = createElement("div");
				text_7 = createText("Наименование организации");
				text_8 = createText("\n\t\t\t\t\t\t");
				input = createElement("input");
				text_10 = createText("\n\t\t\t\t\t");
				div_9 = createElement("div");
				div_10 = createElement("div");
				text_11 = createText("ИНН");
				text_12 = createText("\n\t\t\t\t\t\t");
				input_1 = createElement("input");
				text_14 = createText("\n\n\t\t\t\t\t");
				selectinput._fragment.c();
				text_15 = createText("\n\t\t\t\t\t");
				selectinput_1._fragment.c();
				text_16 = createText("\n\t\t\t\t\t");
				selectinput_2._fragment.c();
				text_17 = createText("\n\t\t\t\t\t");
				selectinput_3._fragment.c();
				text_18 = createText("\n\t\t\t\t\t");
				selectinput_4._fragment.c();
				text_19 = createText("\n\t\t\t\t\t");
				selectinput_5._fragment.c();
				text_20 = createText("\n\t\t\t\t\t");
				selectinput_6._fragment.c();
				text_21 = createText("\n\t\t\t\t\t");
				selectinput_7._fragment.c();
				text_22 = createText("\n\t\t\t\t\t");
				selectinput_8._fragment.c();
				text_23 = createText("\n\n\t\t\t\t\t");
				div_11 = createElement("div");
				div_12 = createElement("div");
				text_24 = createText("Слой квартальной сети");
				text_25 = createText("\n\t\t\t\t\t\t");
				select_1 = createElement("select");
				option = createElement("option");
				if (if_block_1) if_block_1.c();
				text_29 = createText("\n\t\t\t");
				div_13 = createElement("div");
				text_30 = createText("Список объектов");
				text_31 = createText("\n\t\t\t");
				div_14 = createElement("div");
				div_15 = createElement("div");
				div_16 = createElement("div");
				button = createElement("button");
				text_32 = createText("Выделите участки полигоном");
				text_33 = createText("\n\t\t\t\t\t");
				div_17 = createElement("div");
				text_34 = createText("Выделено: 0 / ");
				text_35 = createText(text_35_value);
				text_36 = createText("\n\t\t\t\t\t");
				div_18 = createElement("div");
				div_19 = createElement("div");
				input_2 = createElement("input");
				text_37 = createText("Инвертировать выделение");
				text_39 = createText("\n");
				div_20 = createElement("div");
				table = createElement("table");
				tr = createElement("tr");
				th = createElement("th");
				input_3 = createElement("input");
				text_40 = createText("\n\t\t\t");
				th_1 = createElement("th");
				span = createElement("span");
				text_41 = createText("Id");
				text_42 = createText("\n\t\t\t");
				th_2 = createElement("th");
				span_1 = createElement("span");
				text_43 = createText("Статус");
				text_45 = createText("\n\t\t");
				tr_1 = createElement("tr");
				td = createElement("td");
				input_4 = createElement("input");
				text_46 = createText("\n\t\t\t");
				td_1 = createElement("td");
				span_2 = createElement("span");
				text_47 = createText("1");
				text_48 = createText("\n\t\t\t");
				td_2 = createElement("td");
				span_3 = createElement("span");
				span_4 = createElement("span");
				svg = createSvgElement("svg");
				use = createSvgElement("use");
				text_50 = createText("\n\t\t");
				tr_2 = createElement("tr");
				td_3 = createElement("td");
				input_5 = createElement("input");
				text_51 = createText("\n\t\t\t");
				td_4 = createElement("td");
				span_5 = createElement("span");
				text_52 = createText("2");
				text_53 = createText("\n\t\t\t");
				td_5 = createElement("td");
				span_6 = createElement("span");
				span_7 = createElement("span");
				svg_1 = createSvgElement("svg");
				use_1 = createSvgElement("use");
				text_55 = createText("\n\t\t");
				tr_3 = createElement("tr");
				td_6 = createElement("td");
				input_6 = createElement("input");
				text_56 = createText("\n\t\t\t");
				td_7 = createElement("td");
				span_8 = createElement("span");
				text_57 = createText("1");
				text_58 = createText("\n\t\t\t");
				td_8 = createElement("td");
				span_9 = createElement("span");
				span_10 = createElement("span");
				svg_2 = createSvgElement("svg");
				use_2 = createSvgElement("use");
				text_60 = createText("\n\t\t");
				tr_4 = createElement("tr");
				td_9 = createElement("td");
				button_1 = createElement("button");
				text_61 = createText("назад");
				text_62 = createText("\n\t\t\t\t");
				span_11 = createElement("span");
				text_63 = createText("Стр. ");
				input_7 = createElement("input");
				text_64 = createText(" из 6");
				text_65 = createText("\n\t\t\t\t");
				button_2 = createElement("button");
				text_66 = createText("вперед");
				text_71 = createText("\n\n");
				div_21 = createElement("div");
				div_22 = createElement("div");
				div_23 = createElement("div");
				div_24 = createElement("div");
				div_25 = createElement("div");
				div_26 = createElement("div");
				div_27 = createElement("div");
				input_8 = createElement("input");
				text_73 = createText("\n\t\t\t\t\t");
				div_28 = createElement("div");
				text_75 = createText("\n\t\t\t\t");
				div_29 = createElement("div");
				div_30 = createElement("div");
				span_12 = createElement("span");
				text_76 = createText("Id");
				text_77 = createText("\n\t\t\t\t\t");
				div_31 = createElement("div");
				text_79 = createText("\n\t\t\t\t");
				div_32 = createElement("div");
				div_33 = createElement("div");
				span_13 = createElement("span");
				text_80 = createText("Статус");
				text_81 = createText("\n\t\t\t\t\t");
				div_34 = createElement("div");
				text_83 = createText("\n\t\t\t\t");
				div_35 = createElement("div");
				div_36 = createElement("div");
				text_84 = createText("\n\t\t\t\t\t");
				div_37 = createElement("div");
				text_88 = createText("\n\t\t");
				div_38 = createElement("div");
				div_39 = createElement("div");
				div_40 = createElement("div");
				div_41 = createElement("div");
				div_42 = createElement("div");
				input_9 = createElement("input");
				text_90 = createText("\n\t\t\t\t\t");
				div_43 = createElement("div");
				text_91 = createText("1");
				text_92 = createText("\n\t\t\t\t\t");
				div_44 = createElement("div");
				div_45 = createElement("div");
				text_94 = createText("\n\t\t\t\t\t");
				div_46 = createElement("div");
				div_47 = createElement("div");
				svg_3 = createSvgElement("svg");
				use_3 = createSvgElement("use");
				text_98 = createText("\n");
				div_48 = createElement("div");
				div_49 = createElement("div");
				div_50 = createElement("div");
				div_51 = createElement("div");
				input_10 = createElement("input");
				text_99 = createText("\n");
				div_52 = createElement("div");
				text_100 = createText("2");
				text_101 = createText("\n");
				div_53 = createElement("div");
				div_54 = createElement("div");
				text_102 = createText("\n");
				div_55 = createElement("div");
				div_56 = createElement("div");
				svg_4 = createSvgElement("svg");
				use_4 = createSvgElement("use");
				text_103 = createText("\n");
				div_57 = createElement("div");
				div_58 = createElement("div");
				div_59 = createElement("div");
				div_60 = createElement("div");
				input_11 = createElement("input");
				text_104 = createText("\n");
				div_61 = createElement("div");
				text_105 = createText("3");
				text_106 = createText("\n");
				div_62 = createElement("div");
				div_63 = createElement("div");
				text_107 = createText("\n");
				div_64 = createElement("div");
				div_65 = createElement("div");
				svg_5 = createSvgElement("svg");
				use_5 = createSvgElement("use");
				text_108 = createText("\n");
				div_66 = createElement("div");
				div_67 = createElement("div");
				div_68 = createElement("div");
				div_69 = createElement("div");
				input_12 = createElement("input");
				text_109 = createText("\n");
				div_70 = createElement("div");
				text_110 = createText("4");
				text_111 = createText("\n");
				div_71 = createElement("div");
				div_72 = createElement("div");
				text_112 = createText("\n");
				div_73 = createElement("div");
				div_74 = createElement("div");
				svg_6 = createSvgElement("svg");
				use_6 = createSvgElement("use");
				text_113 = createText("\n");
				div_75 = createElement("div");
				div_76 = createElement("div");
				div_77 = createElement("div");
				div_78 = createElement("div");
				input_13 = createElement("input");
				text_114 = createText("\n");
				div_79 = createElement("div");
				text_115 = createText("5");
				text_116 = createText("\n");
				div_80 = createElement("div");
				div_81 = createElement("div");
				text_117 = createText("\n");
				div_82 = createElement("div");
				div_83 = createElement("div");
				svg_7 = createSvgElement("svg");
				use_7 = createSvgElement("use");
				text_118 = createText("\n");
				div_84 = createElement("div");
				div_85 = createElement("div");
				div_86 = createElement("div");
				div_87 = createElement("div");
				input_14 = createElement("input");
				text_119 = createText("\n");
				div_88 = createElement("div");
				text_120 = createText("6");
				text_121 = createText("\n");
				div_89 = createElement("div");
				div_90 = createElement("div");
				text_122 = createText("\n");
				div_91 = createElement("div");
				div_92 = createElement("div");
				svg_8 = createSvgElement("svg");
				use_8 = createSvgElement("use");
				text_123 = createText("\n");
				div_93 = createElement("div");
				div_94 = createElement("div");
				div_95 = createElement("div");
				div_96 = createElement("div");
				input_15 = createElement("input");
				text_124 = createText("\n");
				div_97 = createElement("div");
				text_125 = createText("7");
				text_126 = createText("\n");
				div_98 = createElement("div");
				div_99 = createElement("div");
				text_127 = createText("\n");
				div_100 = createElement("div");
				div_101 = createElement("div");
				svg_9 = createSvgElement("svg");
				use_9 = createSvgElement("use");
				text_128 = createText("\n");
				div_102 = createElement("div");
				div_103 = createElement("div");
				div_104 = createElement("div");
				div_105 = createElement("div");
				input_16 = createElement("input");
				text_129 = createText("\n");
				div_106 = createElement("div");
				text_130 = createText("8");
				text_131 = createText("\n");
				div_107 = createElement("div");
				div_108 = createElement("div");
				text_132 = createText("\n");
				div_109 = createElement("div");
				div_110 = createElement("div");
				svg_10 = createSvgElement("svg");
				use_10 = createSvgElement("use");
				text_133 = createText("\n");
				div_111 = createElement("div");
				div_112 = createElement("div");
				div_113 = createElement("div");
				div_114 = createElement("div");
				input_17 = createElement("input");
				text_134 = createText("\n");
				div_115 = createElement("div");
				text_135 = createText("9");
				text_136 = createText("\n");
				div_116 = createElement("div");
				div_117 = createElement("div");
				text_137 = createText("\n");
				div_118 = createElement("div");
				div_119 = createElement("div");
				svg_11 = createSvgElement("svg");
				use_11 = createSvgElement("use");
				text_138 = createText("\n");
				div_120 = createElement("div");
				div_121 = createElement("div");
				div_122 = createElement("div");
				div_123 = createElement("div");
				input_18 = createElement("input");
				text_139 = createText("\n");
				div_124 = createElement("div");
				text_140 = createText("10");
				text_141 = createText("\n");
				div_125 = createElement("div");
				div_126 = createElement("div");
				text_142 = createText("\n");
				div_127 = createElement("div");
				div_128 = createElement("div");
				svg_12 = createSvgElement("svg");
				use_12 = createSvgElement("use");
				text_143 = createText("\n");
				div_129 = createElement("div");
				div_130 = createElement("div");
				div_131 = createElement("div");
				div_132 = createElement("div");
				input_19 = createElement("input");
				text_144 = createText("\n");
				div_133 = createElement("div");
				text_145 = createText("11");
				text_146 = createText("\n");
				div_134 = createElement("div");
				div_135 = createElement("div");
				text_147 = createText("\n");
				div_136 = createElement("div");
				div_137 = createElement("div");
				svg_13 = createSvgElement("svg");
				use_13 = createSvgElement("use");
				text_148 = createText("\n");
				div_138 = createElement("div");
				div_139 = createElement("div");
				div_140 = createElement("div");
				div_141 = createElement("div");
				input_20 = createElement("input");
				text_149 = createText("\n");
				div_142 = createElement("div");
				text_150 = createText("12");
				text_151 = createText("\n");
				div_143 = createElement("div");
				div_144 = createElement("div");
				text_152 = createText("\n");
				div_145 = createElement("div");
				div_146 = createElement("div");
				svg_14 = createSvgElement("svg");
				use_14 = createSvgElement("use");
				text_153 = createText("\n");
				div_147 = createElement("div");
				div_148 = createElement("div");
				div_149 = createElement("div");
				div_150 = createElement("div");
				input_21 = createElement("input");
				text_154 = createText("\n");
				div_151 = createElement("div");
				text_155 = createText("13");
				text_156 = createText("\n");
				div_152 = createElement("div");
				div_153 = createElement("div");
				text_157 = createText("\n");
				div_154 = createElement("div");
				div_155 = createElement("div");
				svg_15 = createSvgElement("svg");
				use_15 = createSvgElement("use");
				text_158 = createText("\n");
				div_156 = createElement("div");
				div_157 = createElement("div");
				div_158 = createElement("div");
				div_159 = createElement("div");
				input_22 = createElement("input");
				text_159 = createText("\n");
				div_160 = createElement("div");
				text_160 = createText("14");
				text_161 = createText("\n");
				div_161 = createElement("div");
				div_162 = createElement("div");
				text_162 = createText("\n");
				div_163 = createElement("div");
				div_164 = createElement("div");
				svg_16 = createSvgElement("svg");
				use_16 = createSvgElement("use");
				text_163 = createText("\n");
				div_165 = createElement("div");
				div_166 = createElement("div");
				div_167 = createElement("div");
				div_168 = createElement("div");
				input_23 = createElement("input");
				text_164 = createText("\n");
				div_169 = createElement("div");
				text_165 = createText("15");
				text_166 = createText("\n");
				div_170 = createElement("div");
				div_171 = createElement("div");
				text_167 = createText("\n");
				div_172 = createElement("div");
				div_173 = createElement("div");
				svg_17 = createSvgElement("svg");
				use_17 = createSvgElement("use");
				text_169 = createText("\n");
				div_174 = createElement("div");
				div_175 = createElement("div");
				div_176 = createElement("div");
				button_3 = createElement("button");
				text_170 = createText("назад");
				text_171 = createText("\n");
				div_177 = createElement("div");
				span_14 = createElement("span");
				text_172 = createText("Стр. ");
				div_178 = createElement("div");
				input_24 = createElement("input");
				text_173 = createText(" из");
				span_15 = createElement("span");
				text_174 = createText("6");
				text_175 = createText("\n");
				div_179 = createElement("div");
				button_4 = createElement("button");
				text_176 = createText("вперед");
				text_177 = createText("\n");
				div_180 = createElement("div");
				div_181 = createElement("div");
				text_178 = createText("\n");
				div_182 = createElement("div");
				button_5 = createElement("button");
				text_179 = createText("Создать отчеты");
				div_2.className = "gmx-sidebar-label-medium svelte-v3r55e";
				addLoc(div_2, file$1, 206, 3, 6171);
				div_6.className = "gmx-sidebar-label svelte-v3r55e";
				addLoc(div_6, file$1, 210, 6, 6301);
				addListener(select, "change", change_handler);
				select.name = "reportType";
				select.className = "gmx-sidebar-select-large svelte-v3r55e";
				addLoc(select, file$1, 211, 6, 6370);
				div_5.className = "gmx-sidebar-labeled-block svelte-v3r55e";
				addLoc(div_5, file$1, 209, 5, 6255);
				div_8.className = "gmx-sidebar-label-small svelte-v3r55e";
				addLoc(div_8, file$1, 225, 6, 6878);
				setAttribute(input, "type", "text");
				input.className = "gmx-sidebar-input-large svelte-v3r55e";
				input.value = "Наименование организации";
				addLoc(input, file$1, 226, 6, 6952);
				div_7.className = "gmx-sidebar-labeled-block svelte-v3r55e";
				addLoc(div_7, file$1, 224, 5, 6832);
				div_10.className = "gmx-sidebar-label-small svelte-v3r55e";
				addLoc(div_10, file$1, 229, 6, 7100);
				setAttribute(input_1, "type", "text");
				input_1.className = "gmx-sidebar-input-large svelte-v3r55e";
				input_1.value = "1234567890";
				addLoc(input_1, file$1, 230, 6, 7153);
				div_9.className = "gmx-sidebar-labeled-block svelte-v3r55e";
				addLoc(div_9, file$1, 228, 5, 7054);
				div_12.className = "gmx-sidebar-label svelte-v3r55e";
				addLoc(div_12, file$1, 244, 6, 7745);
				option.__value = "";
				option.value = option.__value;
				option.className = "svelte-v3r55e";
				addLoc(option, file$1, 246, 7, 7928);
				addListener(select_1, "click", click_handler);
				select_1.className = "gmx-sidebar-select-large svelte-v3r55e";
				addLoc(select_1, file$1, 245, 6, 7810);
				div_11.className = "gmx-sidebar-labeled-block svelte-v3r55e";
				addLoc(div_11, file$1, 243, 5, 7699);
				addLoc(div_4, file$1, 208, 4, 6244);
				addLoc(div_3, file$1, 207, 3, 6234);
				div_13.className = "gmx-sidebar-label-medium svelte-v3r55e";
				addLoc(div_13, file$1, 261, 3, 8232);
				button.className = "gmx-sidebar-button svelte-v3r55e";
				addLoc(button, file$1, 264, 48, 8389);
				div_16.className = "gmx-geometry-select-container svelte-v3r55e";
				addLoc(div_16, file$1, 264, 5, 8346);
				div_17.className = "gmx-sidebar-label-medium svelte-v3r55e";
				addLoc(div_17, file$1, 265, 5, 8471);
				setAttribute(input_2, "type", "checkbox");
				input_2.value = "on";
				addLoc(input_2, file$1, 267, 42, 8634);
				div_19.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_19, file$1, 267, 6, 8598);
				div_18.className = "gmx-sidebar-label-small svelte-v3r55e";
				addLoc(div_18, file$1, 266, 5, 8554);
				setAttribute(input_3, "type", "checkbox");
				input_3.value = "on";
				input_3.className = "svelte-v3r55e";
				addLoc(input_3, file$1, 272, 18, 8798);
				th.className = "c1 svelte-v3r55e";
				addLoc(th, file$1, 272, 3, 8783);
				addLoc(span, file$1, 273, 18, 8856);
				th_1.className = "c2 svelte-v3r55e";
				addLoc(th_1, file$1, 273, 3, 8841);
				addLoc(span_1, file$1, 274, 18, 8895);
				th_2.className = "c3 svelte-v3r55e";
				addLoc(th_2, file$1, 274, 3, 8880);
				tr.className = "head svelte-v3r55e";
				addLoc(tr, file$1, 271, 2, 8762);
				setAttribute(input_4, "type", "checkbox");
				input_4.value = "on";
				input_4.className = "svelte-v3r55e";
				addLoc(input_4, file$1, 277, 18, 8966);
				td.className = "c1 svelte-v3r55e";
				addLoc(td, file$1, 277, 3, 8951);
				addLoc(span_2, file$1, 278, 18, 9024);
				td_1.className = "c2 svelte-v3r55e";
				addLoc(td_1, file$1, 278, 3, 9009);
				span_3.className = "status svelte-v3r55e";
				addLoc(span_3, file$1, 279, 18, 9062);
				setXlinkAttribute(use, "xlink:href", "#zoom-to-feature");
				addLoc(use, file$1, 279, 109, 9153);
				setAttribute(svg, "class", "svgIcon svelte-v3r55e");
				addLoc(svg, file$1, 279, 88, 9132);
				span_4.className = "leaflet-gmx-iconSvg svgIcon svelte-v3r55e";
				addLoc(span_4, file$1, 279, 46, 9090);
				td_2.className = "c3";
				addLoc(td_2, file$1, 279, 3, 9047);
				tr_1.className = "item svelte-v3r55e";
				addLoc(tr_1, file$1, 276, 2, 8930);
				setAttribute(input_5, "type", "checkbox");
				input_5.value = "on";
				input_5.className = "svelte-v3r55e";
				addLoc(input_5, file$1, 282, 18, 9259);
				td_3.className = "c1 svelte-v3r55e";
				addLoc(td_3, file$1, 282, 3, 9244);
				addLoc(span_5, file$1, 283, 18, 9317);
				td_4.className = "c2 svelte-v3r55e";
				addLoc(td_4, file$1, 283, 3, 9302);
				span_6.className = "status svelte-v3r55e";
				addLoc(span_6, file$1, 284, 18, 9355);
				setXlinkAttribute(use_1, "xlink:href", "#zoom-to-feature");
				addLoc(use_1, file$1, 284, 109, 9446);
				setAttribute(svg_1, "class", "svgIcon svelte-v3r55e");
				addLoc(svg_1, file$1, 284, 88, 9425);
				span_7.className = "leaflet-gmx-iconSvg svgIcon svelte-v3r55e";
				addLoc(span_7, file$1, 284, 46, 9383);
				td_5.className = "c3";
				addLoc(td_5, file$1, 284, 3, 9340);
				tr_2.className = "item svelte-v3r55e";
				addLoc(tr_2, file$1, 281, 2, 9223);
				setAttribute(input_6, "type", "checkbox");
				input_6.value = "on";
				input_6.className = "svelte-v3r55e";
				addLoc(input_6, file$1, 287, 18, 9552);
				td_6.className = "c1 svelte-v3r55e";
				addLoc(td_6, file$1, 287, 3, 9537);
				addLoc(span_8, file$1, 288, 18, 9610);
				td_7.className = "c2 svelte-v3r55e";
				addLoc(td_7, file$1, 288, 3, 9595);
				span_9.className = "status svelte-v3r55e";
				addLoc(span_9, file$1, 289, 18, 9648);
				setXlinkAttribute(use_2, "xlink:href", "#zoom-to-feature");
				addLoc(use_2, file$1, 289, 109, 9739);
				setAttribute(svg_2, "class", "svgIcon svelte-v3r55e");
				addLoc(svg_2, file$1, 289, 88, 9718);
				span_10.className = "leaflet-gmx-iconSvg svgIcon svelte-v3r55e";
				addLoc(span_10, file$1, 289, 46, 9676);
				td_8.className = "c3";
				addLoc(td_8, file$1, 289, 3, 9633);
				tr_3.className = "item svelte-v3r55e";
				addLoc(tr_3, file$1, 286, 2, 9516);
				button_1.type = "button";
				button_1.disabled = "";
				button_1.className = "-btn svelte-v3r55e";
				addLoc(button_1, file$1, 293, 4, 9857);
				setAttribute(input_7, "type", "number");
				input_7.value = "1";
				input_7.className = "svelte-v3r55e";
				addLoc(input_7, file$1, 294, 32, 9951);
				span_11.className = "pageInfo svelte-v3r55e";
				addLoc(span_11, file$1, 294, 4, 9923);
				button_2.type = "button";
				button_2.className = "-btn svelte-v3r55e";
				addLoc(button_2, file$1, 295, 4, 9999);
				td_9.colSpan = "3";
				td_9.className = "svelte-v3r55e";
				addLoc(td_9, file$1, 292, 3, 9836);
				tr_4.className = "pagination svelte-v3r55e";
				addLoc(tr_4, file$1, 291, 2, 9809);
				table.className = "table svelte-v3r55e";
				addLoc(table, file$1, 270, 1, 8738);
				div_20.className = "tableContect svelte-v3r55e";
				addLoc(div_20, file$1, 269, 0, 8710);
				setAttribute(input_8, "type", "checkbox");
				input_8.value = "on";
				input_8.className = "svelte-v3r55e";
				addLoc(input_8, file$1, 308, 42, 10464);
				div_27.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_27, file$1, 308, 6, 10428);
				div_26.className = "rt-resizable-header-content svelte-v3r55e";
				addLoc(div_26, file$1, 307, 5, 10380);
				div_28.className = "rt-resizer svelte-v3r55e";
				addLoc(div_28, file$1, 310, 5, 10522);
				div_25.className = "rt-th  rt-resizable-header -cursor-pointer svelte-v3r55e";
				setAttribute(div_25, "role", "columnheader");
				div_25.tabIndex = "-1";
				setStyle(div_25, "flex", "30 0 auto");
				setStyle(div_25, "width", "30px");
				addLoc(div_25, file$1, 306, 4, 10246);
				span_12.className = "svelte-v3r55e";
				addLoc(span_12, file$1, 313, 46, 10745);
				div_30.className = "rt-resizable-header-content svelte-v3r55e";
				addLoc(div_30, file$1, 313, 5, 10704);
				div_31.className = "rt-resizer svelte-v3r55e";
				addLoc(div_31, file$1, 314, 5, 10772);
				div_29.className = "rt-th  rt-resizable-header -cursor-pointer svelte-v3r55e";
				setAttribute(div_29, "role", "columnheader");
				div_29.tabIndex = "-1";
				setStyle(div_29, "flex", "200 0 auto");
				setStyle(div_29, "width", "200px");
				addLoc(div_29, file$1, 312, 4, 10568);
				span_13.className = "svelte-v3r55e";
				addLoc(span_13, file$1, 317, 46, 10993);
				div_33.className = "rt-resizable-header-content svelte-v3r55e";
				addLoc(div_33, file$1, 317, 5, 10952);
				div_34.className = "rt-resizer svelte-v3r55e";
				addLoc(div_34, file$1, 318, 5, 11024);
				div_32.className = "rt-th  rt-resizable-header -cursor-pointer svelte-v3r55e";
				setAttribute(div_32, "role", "columnheader");
				div_32.tabIndex = "-1";
				setStyle(div_32, "flex", "30 0 auto");
				setStyle(div_32, "width", "30px");
				addLoc(div_32, file$1, 316, 4, 10818);
				div_36.className = "rt-resizable-header-content svelte-v3r55e";
				addLoc(div_36, file$1, 321, 5, 11204);
				div_37.className = "rt-resizer svelte-v3r55e";
				addLoc(div_37, file$1, 322, 5, 11257);
				div_35.className = "rt-th  rt-resizable-header -cursor-pointer svelte-v3r55e";
				setAttribute(div_35, "role", "columnheader");
				div_35.tabIndex = "-1";
				setStyle(div_35, "flex", "30 0 auto");
				setStyle(div_35, "width", "30px");
				addLoc(div_35, file$1, 320, 4, 11070);
				div_24.className = "rt-tr svelte-v3r55e";
				setAttribute(div_24, "role", "row");
				addLoc(div_24, file$1, 305, 3, 10211);
				div_23.className = "rt-thead -header svelte-v3r55e";
				setStyle(div_23, "min-width", "290px");
				addLoc(div_23, file$1, 304, 2, 10151);
				setAttribute(input_9, "type", "checkbox");
				input_9.value = "on";
				input_9.className = "svelte-v3r55e";
				addLoc(input_9, file$1, 330, 42, 11575);
				div_42.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_42, file$1, 330, 6, 11539);
				div_41.className = "rt-td svelte-v3r55e";
				setAttribute(div_41, "role", "gridcell");
				setStyle(div_41, "flex", "30 0 auto");
				setStyle(div_41, "width", "30px");
				addLoc(div_41, file$1, 329, 5, 11459);
				div_43.className = "rt-td svelte-v3r55e";
				setAttribute(div_43, "role", "gridcell");
				setStyle(div_43, "flex", "200 0 auto");
				setStyle(div_43, "width", "200px");
				addLoc(div_43, file$1, 332, 5, 11633);
				div_45.className = "gmx-status-indicator-good svelte-v3r55e";
				addLoc(div_45, file$1, 334, 6, 11801);
				div_44.className = "rt-td svelte-v3r55e";
				setAttribute(div_44, "role", "gridcell");
				setStyle(div_44, "flex", "30 0 auto");
				setStyle(div_44, "width", "30px");
				addLoc(div_44, file$1, 333, 5, 11721);
				setXlinkAttribute(use_3, "xlink:href", "#zoom-to-feature");
				setAttribute(use_3, "class", "svelte-v3r55e");
				addLoc(use_3, file$1, 337, 72, 12010);
				setAttribute(svg_3, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_3, file$1, 337, 44, 11982);
				div_47.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_47, file$1, 337, 6, 11944);
				div_46.className = "rt-td svelte-v3r55e";
				setAttribute(div_46, "role", "gridcell");
				setStyle(div_46, "flex", "30 0 auto");
				setStyle(div_46, "width", "30px");
				addLoc(div_46, file$1, 336, 5, 11864);
				div_40.className = "rt-tr -odd svelte-v3r55e";
				setAttribute(div_40, "role", "row");
				addLoc(div_40, file$1, 328, 4, 11418);
				div_39.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_39, "role", "rowgroup");
				addLoc(div_39, file$1, 327, 3, 11372);
				setAttribute(input_10, "type", "checkbox");
				input_10.value = "on";
				input_10.className = "svelte-v3r55e";
				addLoc(input_10, file$1, 344, 36, 12286);
				div_51.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_51, file$1, 344, 0, 12250);
				div_50.className = "rt-td svelte-v3r55e";
				setAttribute(div_50, "role", "gridcell");
				setStyle(div_50, "flex", "30 0 auto");
				setStyle(div_50, "width", "30px");
				addLoc(div_50, file$1, 343, 0, 12176);
				div_52.className = "rt-td svelte-v3r55e";
				setAttribute(div_52, "role", "gridcell");
				setStyle(div_52, "flex", "200 0 auto");
				setStyle(div_52, "width", "200px");
				addLoc(div_52, file$1, 345, 0, 12333);
				div_54.className = "gmx-status-indicator-good svelte-v3r55e";
				addLoc(div_54, file$1, 347, 0, 12490);
				div_53.className = "rt-td svelte-v3r55e";
				setAttribute(div_53, "role", "gridcell");
				setStyle(div_53, "flex", "30 0 auto");
				setStyle(div_53, "width", "30px");
				addLoc(div_53, file$1, 346, 0, 12416);
				setXlinkAttribute(use_4, "xlink:href", "#zoom-to-feature");
				setAttribute(use_4, "class", "svelte-v3r55e");
				addLoc(use_4, file$1, 349, 66, 12682);
				setAttribute(svg_4, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_4, file$1, 349, 38, 12654);
				div_56.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_56, file$1, 349, 0, 12616);
				div_55.className = "rt-td svelte-v3r55e";
				setAttribute(div_55, "role", "gridcell");
				setStyle(div_55, "flex", "30 0 auto");
				setStyle(div_55, "width", "30px");
				addLoc(div_55, file$1, 348, 0, 12542);
				div_49.className = "rt-tr -even svelte-v3r55e";
				setAttribute(div_49, "role", "row");
				addLoc(div_49, file$1, 342, 0, 12139);
				div_48.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_48, "role", "rowgroup");
				addLoc(div_48, file$1, 341, 0, 12097);
				setAttribute(input_11, "type", "checkbox");
				input_11.value = "on";
				input_11.className = "svelte-v3r55e";
				addLoc(input_11, file$1, 353, 36, 12942);
				div_60.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_60, file$1, 353, 0, 12906);
				div_59.className = "rt-td svelte-v3r55e";
				setAttribute(div_59, "role", "gridcell");
				setStyle(div_59, "flex", "30 0 auto");
				setStyle(div_59, "width", "30px");
				addLoc(div_59, file$1, 352, 0, 12832);
				div_61.className = "rt-td svelte-v3r55e";
				setAttribute(div_61, "role", "gridcell");
				setStyle(div_61, "flex", "200 0 auto");
				setStyle(div_61, "width", "200px");
				addLoc(div_61, file$1, 354, 0, 12989);
				div_63.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_63, file$1, 356, 0, 13146);
				div_62.className = "rt-td svelte-v3r55e";
				setAttribute(div_62, "role", "gridcell");
				setStyle(div_62, "flex", "30 0 auto");
				setStyle(div_62, "width", "30px");
				addLoc(div_62, file$1, 355, 0, 13072);
				setXlinkAttribute(use_5, "xlink:href", "#zoom-to-feature");
				setAttribute(use_5, "class", "svelte-v3r55e");
				addLoc(use_5, file$1, 358, 66, 13337);
				setAttribute(svg_5, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_5, file$1, 358, 38, 13309);
				div_65.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_65, file$1, 358, 0, 13271);
				div_64.className = "rt-td svelte-v3r55e";
				setAttribute(div_64, "role", "gridcell");
				setStyle(div_64, "flex", "30 0 auto");
				setStyle(div_64, "width", "30px");
				addLoc(div_64, file$1, 357, 0, 13197);
				div_58.className = "rt-tr -odd svelte-v3r55e";
				setAttribute(div_58, "role", "row");
				addLoc(div_58, file$1, 351, 0, 12796);
				div_57.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_57, "role", "rowgroup");
				addLoc(div_57, file$1, 350, 0, 12754);
				setAttribute(input_12, "type", "checkbox");
				input_12.value = "on";
				input_12.className = "svelte-v3r55e";
				addLoc(input_12, file$1, 362, 36, 13598);
				div_69.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_69, file$1, 362, 0, 13562);
				div_68.className = "rt-td svelte-v3r55e";
				setAttribute(div_68, "role", "gridcell");
				setStyle(div_68, "flex", "30 0 auto");
				setStyle(div_68, "width", "30px");
				addLoc(div_68, file$1, 361, 0, 13488);
				div_70.className = "rt-td svelte-v3r55e";
				setAttribute(div_70, "role", "gridcell");
				setStyle(div_70, "flex", "200 0 auto");
				setStyle(div_70, "width", "200px");
				addLoc(div_70, file$1, 363, 0, 13645);
				div_72.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_72, file$1, 365, 0, 13802);
				div_71.className = "rt-td svelte-v3r55e";
				setAttribute(div_71, "role", "gridcell");
				setStyle(div_71, "flex", "30 0 auto");
				setStyle(div_71, "width", "30px");
				addLoc(div_71, file$1, 364, 0, 13728);
				setXlinkAttribute(use_6, "xlink:href", "#zoom-to-feature");
				setAttribute(use_6, "class", "svelte-v3r55e");
				addLoc(use_6, file$1, 367, 66, 13993);
				setAttribute(svg_6, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_6, file$1, 367, 38, 13965);
				div_74.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_74, file$1, 367, 0, 13927);
				div_73.className = "rt-td svelte-v3r55e";
				setAttribute(div_73, "role", "gridcell");
				setStyle(div_73, "flex", "30 0 auto");
				setStyle(div_73, "width", "30px");
				addLoc(div_73, file$1, 366, 0, 13853);
				div_67.className = "rt-tr -even svelte-v3r55e";
				setAttribute(div_67, "role", "row");
				addLoc(div_67, file$1, 360, 0, 13451);
				div_66.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_66, "role", "rowgroup");
				addLoc(div_66, file$1, 359, 0, 13409);
				setAttribute(input_13, "type", "checkbox");
				input_13.value = "on";
				input_13.className = "svelte-v3r55e";
				addLoc(input_13, file$1, 371, 36, 14253);
				div_78.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_78, file$1, 371, 0, 14217);
				div_77.className = "rt-td svelte-v3r55e";
				setAttribute(div_77, "role", "gridcell");
				setStyle(div_77, "flex", "30 0 auto");
				setStyle(div_77, "width", "30px");
				addLoc(div_77, file$1, 370, 0, 14143);
				div_79.className = "rt-td svelte-v3r55e";
				setAttribute(div_79, "role", "gridcell");
				setStyle(div_79, "flex", "200 0 auto");
				setStyle(div_79, "width", "200px");
				addLoc(div_79, file$1, 372, 0, 14300);
				div_81.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_81, file$1, 374, 0, 14457);
				div_80.className = "rt-td svelte-v3r55e";
				setAttribute(div_80, "role", "gridcell");
				setStyle(div_80, "flex", "30 0 auto");
				setStyle(div_80, "width", "30px");
				addLoc(div_80, file$1, 373, 0, 14383);
				setXlinkAttribute(use_7, "xlink:href", "#zoom-to-feature");
				setAttribute(use_7, "class", "svelte-v3r55e");
				addLoc(use_7, file$1, 376, 66, 14648);
				setAttribute(svg_7, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_7, file$1, 376, 38, 14620);
				div_83.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_83, file$1, 376, 0, 14582);
				div_82.className = "rt-td svelte-v3r55e";
				setAttribute(div_82, "role", "gridcell");
				setStyle(div_82, "flex", "30 0 auto");
				setStyle(div_82, "width", "30px");
				addLoc(div_82, file$1, 375, 0, 14508);
				div_76.className = "rt-tr -odd svelte-v3r55e";
				setAttribute(div_76, "role", "row");
				addLoc(div_76, file$1, 369, 0, 14107);
				div_75.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_75, "role", "rowgroup");
				addLoc(div_75, file$1, 368, 0, 14065);
				setAttribute(input_14, "type", "checkbox");
				input_14.value = "on";
				input_14.className = "svelte-v3r55e";
				addLoc(input_14, file$1, 380, 36, 14909);
				div_87.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_87, file$1, 380, 0, 14873);
				div_86.className = "rt-td svelte-v3r55e";
				setAttribute(div_86, "role", "gridcell");
				setStyle(div_86, "flex", "30 0 auto");
				setStyle(div_86, "width", "30px");
				addLoc(div_86, file$1, 379, 0, 14799);
				div_88.className = "rt-td svelte-v3r55e";
				setAttribute(div_88, "role", "gridcell");
				setStyle(div_88, "flex", "200 0 auto");
				setStyle(div_88, "width", "200px");
				addLoc(div_88, file$1, 381, 0, 14956);
				div_90.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_90, file$1, 383, 0, 15113);
				div_89.className = "rt-td svelte-v3r55e";
				setAttribute(div_89, "role", "gridcell");
				setStyle(div_89, "flex", "30 0 auto");
				setStyle(div_89, "width", "30px");
				addLoc(div_89, file$1, 382, 0, 15039);
				setXlinkAttribute(use_8, "xlink:href", "#zoom-to-feature");
				setAttribute(use_8, "class", "svelte-v3r55e");
				addLoc(use_8, file$1, 385, 66, 15304);
				setAttribute(svg_8, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_8, file$1, 385, 38, 15276);
				div_92.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_92, file$1, 385, 0, 15238);
				div_91.className = "rt-td svelte-v3r55e";
				setAttribute(div_91, "role", "gridcell");
				setStyle(div_91, "flex", "30 0 auto");
				setStyle(div_91, "width", "30px");
				addLoc(div_91, file$1, 384, 0, 15164);
				div_85.className = "rt-tr -even svelte-v3r55e";
				setAttribute(div_85, "role", "row");
				addLoc(div_85, file$1, 378, 0, 14762);
				div_84.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_84, "role", "rowgroup");
				addLoc(div_84, file$1, 377, 0, 14720);
				setAttribute(input_15, "type", "checkbox");
				input_15.value = "on";
				input_15.className = "svelte-v3r55e";
				addLoc(input_15, file$1, 389, 36, 15564);
				div_96.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_96, file$1, 389, 0, 15528);
				div_95.className = "rt-td svelte-v3r55e";
				setAttribute(div_95, "role", "gridcell");
				setStyle(div_95, "flex", "30 0 auto");
				setStyle(div_95, "width", "30px");
				addLoc(div_95, file$1, 388, 0, 15454);
				div_97.className = "rt-td svelte-v3r55e";
				setAttribute(div_97, "role", "gridcell");
				setStyle(div_97, "flex", "200 0 auto");
				setStyle(div_97, "width", "200px");
				addLoc(div_97, file$1, 390, 0, 15611);
				div_99.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_99, file$1, 392, 0, 15768);
				div_98.className = "rt-td svelte-v3r55e";
				setAttribute(div_98, "role", "gridcell");
				setStyle(div_98, "flex", "30 0 auto");
				setStyle(div_98, "width", "30px");
				addLoc(div_98, file$1, 391, 0, 15694);
				setXlinkAttribute(use_9, "xlink:href", "#zoom-to-feature");
				setAttribute(use_9, "class", "svelte-v3r55e");
				addLoc(use_9, file$1, 394, 66, 15959);
				setAttribute(svg_9, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_9, file$1, 394, 38, 15931);
				div_101.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_101, file$1, 394, 0, 15893);
				div_100.className = "rt-td svelte-v3r55e";
				setAttribute(div_100, "role", "gridcell");
				setStyle(div_100, "flex", "30 0 auto");
				setStyle(div_100, "width", "30px");
				addLoc(div_100, file$1, 393, 0, 15819);
				div_94.className = "rt-tr -odd svelte-v3r55e";
				setAttribute(div_94, "role", "row");
				addLoc(div_94, file$1, 387, 0, 15418);
				div_93.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_93, "role", "rowgroup");
				addLoc(div_93, file$1, 386, 0, 15376);
				setAttribute(input_16, "type", "checkbox");
				input_16.value = "on";
				input_16.className = "svelte-v3r55e";
				addLoc(input_16, file$1, 398, 36, 16220);
				div_105.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_105, file$1, 398, 0, 16184);
				div_104.className = "rt-td svelte-v3r55e";
				setAttribute(div_104, "role", "gridcell");
				setStyle(div_104, "flex", "30 0 auto");
				setStyle(div_104, "width", "30px");
				addLoc(div_104, file$1, 397, 0, 16110);
				div_106.className = "rt-td svelte-v3r55e";
				setAttribute(div_106, "role", "gridcell");
				setStyle(div_106, "flex", "200 0 auto");
				setStyle(div_106, "width", "200px");
				addLoc(div_106, file$1, 399, 0, 16267);
				div_108.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_108, file$1, 401, 0, 16424);
				div_107.className = "rt-td svelte-v3r55e";
				setAttribute(div_107, "role", "gridcell");
				setStyle(div_107, "flex", "30 0 auto");
				setStyle(div_107, "width", "30px");
				addLoc(div_107, file$1, 400, 0, 16350);
				setXlinkAttribute(use_10, "xlink:href", "#zoom-to-feature");
				setAttribute(use_10, "class", "svelte-v3r55e");
				addLoc(use_10, file$1, 403, 66, 16615);
				setAttribute(svg_10, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_10, file$1, 403, 38, 16587);
				div_110.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_110, file$1, 403, 0, 16549);
				div_109.className = "rt-td svelte-v3r55e";
				setAttribute(div_109, "role", "gridcell");
				setStyle(div_109, "flex", "30 0 auto");
				setStyle(div_109, "width", "30px");
				addLoc(div_109, file$1, 402, 0, 16475);
				div_103.className = "rt-tr -even svelte-v3r55e";
				setAttribute(div_103, "role", "row");
				addLoc(div_103, file$1, 396, 0, 16073);
				div_102.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_102, "role", "rowgroup");
				addLoc(div_102, file$1, 395, 0, 16031);
				setAttribute(input_17, "type", "checkbox");
				input_17.value = "on";
				input_17.className = "svelte-v3r55e";
				addLoc(input_17, file$1, 407, 36, 16875);
				div_114.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_114, file$1, 407, 0, 16839);
				div_113.className = "rt-td svelte-v3r55e";
				setAttribute(div_113, "role", "gridcell");
				setStyle(div_113, "flex", "30 0 auto");
				setStyle(div_113, "width", "30px");
				addLoc(div_113, file$1, 406, 0, 16765);
				div_115.className = "rt-td svelte-v3r55e";
				setAttribute(div_115, "role", "gridcell");
				setStyle(div_115, "flex", "200 0 auto");
				setStyle(div_115, "width", "200px");
				addLoc(div_115, file$1, 408, 0, 16922);
				div_117.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_117, file$1, 410, 0, 17079);
				div_116.className = "rt-td svelte-v3r55e";
				setAttribute(div_116, "role", "gridcell");
				setStyle(div_116, "flex", "30 0 auto");
				setStyle(div_116, "width", "30px");
				addLoc(div_116, file$1, 409, 0, 17005);
				setXlinkAttribute(use_11, "xlink:href", "#zoom-to-feature");
				setAttribute(use_11, "class", "svelte-v3r55e");
				addLoc(use_11, file$1, 412, 66, 17270);
				setAttribute(svg_11, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_11, file$1, 412, 38, 17242);
				div_119.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_119, file$1, 412, 0, 17204);
				div_118.className = "rt-td svelte-v3r55e";
				setAttribute(div_118, "role", "gridcell");
				setStyle(div_118, "flex", "30 0 auto");
				setStyle(div_118, "width", "30px");
				addLoc(div_118, file$1, 411, 0, 17130);
				div_112.className = "rt-tr -odd svelte-v3r55e";
				setAttribute(div_112, "role", "row");
				addLoc(div_112, file$1, 405, 0, 16729);
				div_111.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_111, "role", "rowgroup");
				addLoc(div_111, file$1, 404, 0, 16687);
				setAttribute(input_18, "type", "checkbox");
				input_18.value = "on";
				input_18.className = "svelte-v3r55e";
				addLoc(input_18, file$1, 416, 36, 17531);
				div_123.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_123, file$1, 416, 0, 17495);
				div_122.className = "rt-td svelte-v3r55e";
				setAttribute(div_122, "role", "gridcell");
				setStyle(div_122, "flex", "30 0 auto");
				setStyle(div_122, "width", "30px");
				addLoc(div_122, file$1, 415, 0, 17421);
				div_124.className = "rt-td svelte-v3r55e";
				setAttribute(div_124, "role", "gridcell");
				setStyle(div_124, "flex", "200 0 auto");
				setStyle(div_124, "width", "200px");
				addLoc(div_124, file$1, 417, 0, 17578);
				div_126.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_126, file$1, 419, 0, 17736);
				div_125.className = "rt-td svelte-v3r55e";
				setAttribute(div_125, "role", "gridcell");
				setStyle(div_125, "flex", "30 0 auto");
				setStyle(div_125, "width", "30px");
				addLoc(div_125, file$1, 418, 0, 17662);
				setXlinkAttribute(use_12, "xlink:href", "#zoom-to-feature");
				setAttribute(use_12, "class", "svelte-v3r55e");
				addLoc(use_12, file$1, 421, 66, 17927);
				setAttribute(svg_12, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_12, file$1, 421, 38, 17899);
				div_128.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_128, file$1, 421, 0, 17861);
				div_127.className = "rt-td svelte-v3r55e";
				setAttribute(div_127, "role", "gridcell");
				setStyle(div_127, "flex", "30 0 auto");
				setStyle(div_127, "width", "30px");
				addLoc(div_127, file$1, 420, 0, 17787);
				div_121.className = "rt-tr -even svelte-v3r55e";
				setAttribute(div_121, "role", "row");
				addLoc(div_121, file$1, 414, 0, 17384);
				div_120.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_120, "role", "rowgroup");
				addLoc(div_120, file$1, 413, 0, 17342);
				setAttribute(input_19, "type", "checkbox");
				input_19.value = "on";
				input_19.className = "svelte-v3r55e";
				addLoc(input_19, file$1, 425, 36, 18187);
				div_132.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_132, file$1, 425, 0, 18151);
				div_131.className = "rt-td svelte-v3r55e";
				setAttribute(div_131, "role", "gridcell");
				setStyle(div_131, "flex", "30 0 auto");
				setStyle(div_131, "width", "30px");
				addLoc(div_131, file$1, 424, 0, 18077);
				div_133.className = "rt-td svelte-v3r55e";
				setAttribute(div_133, "role", "gridcell");
				setStyle(div_133, "flex", "200 0 auto");
				setStyle(div_133, "width", "200px");
				addLoc(div_133, file$1, 426, 0, 18234);
				div_135.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_135, file$1, 428, 0, 18392);
				div_134.className = "rt-td svelte-v3r55e";
				setAttribute(div_134, "role", "gridcell");
				setStyle(div_134, "flex", "30 0 auto");
				setStyle(div_134, "width", "30px");
				addLoc(div_134, file$1, 427, 0, 18318);
				setXlinkAttribute(use_13, "xlink:href", "#zoom-to-feature");
				setAttribute(use_13, "class", "svelte-v3r55e");
				addLoc(use_13, file$1, 430, 66, 18583);
				setAttribute(svg_13, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_13, file$1, 430, 38, 18555);
				div_137.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_137, file$1, 430, 0, 18517);
				div_136.className = "rt-td svelte-v3r55e";
				setAttribute(div_136, "role", "gridcell");
				setStyle(div_136, "flex", "30 0 auto");
				setStyle(div_136, "width", "30px");
				addLoc(div_136, file$1, 429, 0, 18443);
				div_130.className = "rt-tr -odd svelte-v3r55e";
				setAttribute(div_130, "role", "row");
				addLoc(div_130, file$1, 423, 0, 18041);
				div_129.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_129, "role", "rowgroup");
				addLoc(div_129, file$1, 422, 0, 17999);
				setAttribute(input_20, "type", "checkbox");
				input_20.value = "on";
				input_20.className = "svelte-v3r55e";
				addLoc(input_20, file$1, 434, 36, 18844);
				div_141.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_141, file$1, 434, 0, 18808);
				div_140.className = "rt-td svelte-v3r55e";
				setAttribute(div_140, "role", "gridcell");
				setStyle(div_140, "flex", "30 0 auto");
				setStyle(div_140, "width", "30px");
				addLoc(div_140, file$1, 433, 0, 18734);
				div_142.className = "rt-td svelte-v3r55e";
				setAttribute(div_142, "role", "gridcell");
				setStyle(div_142, "flex", "200 0 auto");
				setStyle(div_142, "width", "200px");
				addLoc(div_142, file$1, 435, 0, 18891);
				div_144.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_144, file$1, 437, 0, 19049);
				div_143.className = "rt-td svelte-v3r55e";
				setAttribute(div_143, "role", "gridcell");
				setStyle(div_143, "flex", "30 0 auto");
				setStyle(div_143, "width", "30px");
				addLoc(div_143, file$1, 436, 0, 18975);
				setXlinkAttribute(use_14, "xlink:href", "#zoom-to-feature");
				setAttribute(use_14, "class", "svelte-v3r55e");
				addLoc(use_14, file$1, 439, 66, 19240);
				setAttribute(svg_14, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_14, file$1, 439, 38, 19212);
				div_146.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_146, file$1, 439, 0, 19174);
				div_145.className = "rt-td svelte-v3r55e";
				setAttribute(div_145, "role", "gridcell");
				setStyle(div_145, "flex", "30 0 auto");
				setStyle(div_145, "width", "30px");
				addLoc(div_145, file$1, 438, 0, 19100);
				div_139.className = "rt-tr -even svelte-v3r55e";
				setAttribute(div_139, "role", "row");
				addLoc(div_139, file$1, 432, 0, 18697);
				div_138.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_138, "role", "rowgroup");
				addLoc(div_138, file$1, 431, 0, 18655);
				setAttribute(input_21, "type", "checkbox");
				input_21.value = "on";
				input_21.className = "svelte-v3r55e";
				addLoc(input_21, file$1, 443, 36, 19500);
				div_150.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_150, file$1, 443, 0, 19464);
				div_149.className = "rt-td svelte-v3r55e";
				setAttribute(div_149, "role", "gridcell");
				setStyle(div_149, "flex", "30 0 auto");
				setStyle(div_149, "width", "30px");
				addLoc(div_149, file$1, 442, 0, 19390);
				div_151.className = "rt-td svelte-v3r55e";
				setAttribute(div_151, "role", "gridcell");
				setStyle(div_151, "flex", "200 0 auto");
				setStyle(div_151, "width", "200px");
				addLoc(div_151, file$1, 444, 0, 19547);
				div_153.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_153, file$1, 446, 0, 19705);
				div_152.className = "rt-td svelte-v3r55e";
				setAttribute(div_152, "role", "gridcell");
				setStyle(div_152, "flex", "30 0 auto");
				setStyle(div_152, "width", "30px");
				addLoc(div_152, file$1, 445, 0, 19631);
				setXlinkAttribute(use_15, "xlink:href", "#zoom-to-feature");
				setAttribute(use_15, "class", "svelte-v3r55e");
				addLoc(use_15, file$1, 448, 66, 19896);
				setAttribute(svg_15, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_15, file$1, 448, 38, 19868);
				div_155.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_155, file$1, 448, 0, 19830);
				div_154.className = "rt-td svelte-v3r55e";
				setAttribute(div_154, "role", "gridcell");
				setStyle(div_154, "flex", "30 0 auto");
				setStyle(div_154, "width", "30px");
				addLoc(div_154, file$1, 447, 0, 19756);
				div_148.className = "rt-tr -odd svelte-v3r55e";
				setAttribute(div_148, "role", "row");
				addLoc(div_148, file$1, 441, 0, 19354);
				div_147.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_147, "role", "rowgroup");
				addLoc(div_147, file$1, 440, 0, 19312);
				setAttribute(input_22, "type", "checkbox");
				input_22.value = "on";
				input_22.className = "svelte-v3r55e";
				addLoc(input_22, file$1, 452, 36, 20157);
				div_159.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_159, file$1, 452, 0, 20121);
				div_158.className = "rt-td svelte-v3r55e";
				setAttribute(div_158, "role", "gridcell");
				setStyle(div_158, "flex", "30 0 auto");
				setStyle(div_158, "width", "30px");
				addLoc(div_158, file$1, 451, 0, 20047);
				div_160.className = "rt-td svelte-v3r55e";
				setAttribute(div_160, "role", "gridcell");
				setStyle(div_160, "flex", "200 0 auto");
				setStyle(div_160, "width", "200px");
				addLoc(div_160, file$1, 453, 0, 20204);
				div_162.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_162, file$1, 455, 0, 20362);
				div_161.className = "rt-td svelte-v3r55e";
				setAttribute(div_161, "role", "gridcell");
				setStyle(div_161, "flex", "30 0 auto");
				setStyle(div_161, "width", "30px");
				addLoc(div_161, file$1, 454, 0, 20288);
				setXlinkAttribute(use_16, "xlink:href", "#zoom-to-feature");
				setAttribute(use_16, "class", "svelte-v3r55e");
				addLoc(use_16, file$1, 457, 66, 20553);
				setAttribute(svg_16, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_16, file$1, 457, 38, 20525);
				div_164.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_164, file$1, 457, 0, 20487);
				div_163.className = "rt-td svelte-v3r55e";
				setAttribute(div_163, "role", "gridcell");
				setStyle(div_163, "flex", "30 0 auto");
				setStyle(div_163, "width", "30px");
				addLoc(div_163, file$1, 456, 0, 20413);
				div_157.className = "rt-tr -even svelte-v3r55e";
				setAttribute(div_157, "role", "row");
				addLoc(div_157, file$1, 450, 0, 20010);
				div_156.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_156, "role", "rowgroup");
				addLoc(div_156, file$1, 449, 0, 19968);
				setAttribute(input_23, "type", "checkbox");
				input_23.value = "on";
				input_23.className = "svelte-v3r55e";
				addLoc(input_23, file$1, 461, 36, 20813);
				div_168.className = "gmx-checkbox-container svelte-v3r55e";
				addLoc(div_168, file$1, 461, 0, 20777);
				div_167.className = "rt-td svelte-v3r55e";
				setAttribute(div_167, "role", "gridcell");
				setStyle(div_167, "flex", "30 0 auto");
				setStyle(div_167, "width", "30px");
				addLoc(div_167, file$1, 460, 0, 20703);
				div_169.className = "rt-td svelte-v3r55e";
				setAttribute(div_169, "role", "gridcell");
				setStyle(div_169, "flex", "200 0 auto");
				setStyle(div_169, "width", "200px");
				addLoc(div_169, file$1, 462, 0, 20860);
				div_171.className = "gmx-status-indicator-bad svelte-v3r55e";
				addLoc(div_171, file$1, 464, 0, 21018);
				div_170.className = "rt-td svelte-v3r55e";
				setAttribute(div_170, "role", "gridcell");
				setStyle(div_170, "flex", "30 0 auto");
				setStyle(div_170, "width", "30px");
				addLoc(div_170, file$1, 463, 0, 20944);
				setXlinkAttribute(use_17, "xlink:href", "#zoom-to-feature");
				setAttribute(use_17, "class", "svelte-v3r55e");
				addLoc(use_17, file$1, 466, 66, 21209);
				setAttribute(svg_17, "class", "gmx-table-icon svelte-v3r55e");
				addLoc(svg_17, file$1, 466, 38, 21181);
				div_173.className = "gmx-table-icon-container svelte-v3r55e";
				addLoc(div_173, file$1, 466, 0, 21143);
				div_172.className = "rt-td svelte-v3r55e";
				setAttribute(div_172, "role", "gridcell");
				setStyle(div_172, "flex", "30 0 auto");
				setStyle(div_172, "width", "30px");
				addLoc(div_172, file$1, 465, 0, 21069);
				div_166.className = "rt-tr -odd svelte-v3r55e";
				setAttribute(div_166, "role", "row");
				addLoc(div_166, file$1, 459, 0, 20667);
				div_165.className = "rt-tr-group svelte-v3r55e";
				setAttribute(div_165, "role", "rowgroup");
				addLoc(div_165, file$1, 458, 0, 20625);
				div_38.className = "rt-tbody svelte-v3r55e";
				setStyle(div_38, "min-width", "290px");
				addLoc(div_38, file$1, 326, 2, 11320);
				div_22.className = "rt-table svelte-v3r55e";
				setAttribute(div_22, "role", "grid");
				addLoc(div_22, file$1, 303, 1, 10114);
				button_3.type = "button";
				button_3.disabled = "";
				button_3.className = "-btn svelte-v3r55e";
				addLoc(button_3, file$1, 470, 23, 21375);
				div_176.className = "-previous svelte-v3r55e";
				addLoc(div_176, file$1, 470, 0, 21352);
				setAttribute(input_24, "type", "number");
				input_24.value = "1";
				input_24.className = "svelte-v3r55e";
				addLoc(input_24, file$1, 472, 23, 21605);
				div_178.className = "-pageJump svelte-v3r55e";
				addLoc(div_178, file$1, 472, 0, 21582);
				span_15.className = "-totalPages svelte-v3r55e";
				addLoc(span_15, file$1, 472, 196, 21778);
				span_14.className = "-pageInfo svelte-v3r55e";
				addLoc(span_14, file$1, 471, 21, 21464);
				div_177.className = "-center svelte-v3r55e";
				addLoc(div_177, file$1, 471, 0, 21443);
				button_4.type = "button";
				button_4.className = "-btn svelte-v3r55e";
				addLoc(button_4, file$1, 473, 19, 21845);
				div_179.className = "-next svelte-v3r55e";
				addLoc(div_179, file$1, 473, 0, 21826);
				div_175.className = "-pagination svelte-v3r55e";
				addLoc(div_175, file$1, 469, 0, 21326);
				div_174.className = "pagination-bottom svelte-v3r55e";
				addLoc(div_174, file$1, 468, 0, 21294);
				div_181.className = "-loading-inner svelte-v3r55e";
				addLoc(div_181, file$1, 475, 0, 21937);
				div_180.className = "-loading svelte-v3r55e";
				addLoc(div_180, file$1, 474, 0, 21914);
				div_21.className = "ReactTable svelte-v3r55e";
				addLoc(div_21, file$1, 302, 0, 10088);
				addLoc(div_15, file$1, 263, 4, 8335);
				div_14.className = "forest-features-block svelte-v3r55e";
				addLoc(div_14, file$1, 262, 3, 8295);
				button_5.className = "gmx-sidebar-button-disabled svelte-v3r55e";
				button_5.disabled = "";
				addLoc(button_5, file$1, 476, 34, 22030);
				div_182.className = "gmx-button-container svelte-v3r55e";
				addLoc(div_182, file$1, 476, 0, 21996);
				addLoc(div_1, file$1, 205, 2, 6162);
				div.className = "leftContent forest-plugin-content svelte-v3r55e";
				addLoc(div, file$1, 204, 1, 6112);
			},

			m: function mount(target, anchor) {
				insertNode(div, target, anchor);
				appendNode(div_1, div);
				appendNode(div_2, div_1);
				appendNode(text, div_2);
				appendNode(text_1, div_1);
				appendNode(div_3, div_1);
				appendNode(div_4, div_3);
				appendNode(div_5, div_4);
				appendNode(div_6, div_5);
				appendNode(text_2, div_6);
				appendNode(text_3, div_5);
				appendNode(select, div_5);

				for (var i = 0; i < each_blocks.length; i += 1) {
					each_blocks[i].m(select, null);
				}

				appendNode(text_5, div_4);
				if (if_block) if_block.m(div_4, null);
				appendNode(text_6, div_4);
				appendNode(div_7, div_4);
				appendNode(div_8, div_7);
				appendNode(text_7, div_8);
				appendNode(text_8, div_7);
				appendNode(input, div_7);
				appendNode(text_10, div_4);
				appendNode(div_9, div_4);
				appendNode(div_10, div_9);
				appendNode(text_11, div_10);
				appendNode(text_12, div_9);
				appendNode(input_1, div_9);
				appendNode(text_14, div_4);
				selectinput._mount(div_4, null);
				appendNode(text_15, div_4);
				selectinput_1._mount(div_4, null);
				appendNode(text_16, div_4);
				selectinput_2._mount(div_4, null);
				appendNode(text_17, div_4);
				selectinput_3._mount(div_4, null);
				appendNode(text_18, div_4);
				selectinput_4._mount(div_4, null);
				appendNode(text_19, div_4);
				selectinput_5._mount(div_4, null);
				appendNode(text_20, div_4);
				selectinput_6._mount(div_4, null);
				appendNode(text_21, div_4);
				selectinput_7._mount(div_4, null);
				appendNode(text_22, div_4);
				selectinput_8._mount(div_4, null);
				appendNode(text_23, div_4);
				appendNode(div_11, div_4);
				appendNode(div_12, div_11);
				appendNode(text_24, div_12);
				appendNode(text_25, div_11);
				appendNode(select_1, div_11);
				appendNode(option, select_1);
				if (if_block_1) if_block_1.m(select_1, null);
				appendNode(text_29, div_1);
				appendNode(div_13, div_1);
				appendNode(text_30, div_13);
				appendNode(text_31, div_1);
				appendNode(div_14, div_1);
				appendNode(div_15, div_14);
				appendNode(div_16, div_15);
				appendNode(button, div_16);
				appendNode(text_32, button);
				appendNode(text_33, div_15);
				appendNode(div_17, div_15);
				appendNode(text_34, div_17);
				appendNode(text_35, div_17);
				appendNode(text_36, div_15);
				appendNode(div_18, div_15);
				appendNode(div_19, div_18);
				appendNode(input_2, div_19);
				appendNode(text_37, div_19);
				appendNode(text_39, div_15);
				appendNode(div_20, div_15);
				appendNode(table, div_20);
				appendNode(tr, table);
				appendNode(th, tr);
				appendNode(input_3, th);
				appendNode(text_40, tr);
				appendNode(th_1, tr);
				appendNode(span, th_1);
				appendNode(text_41, span);
				appendNode(text_42, tr);
				appendNode(th_2, tr);
				appendNode(span_1, th_2);
				appendNode(text_43, span_1);
				appendNode(text_45, table);
				appendNode(tr_1, table);
				appendNode(td, tr_1);
				appendNode(input_4, td);
				appendNode(text_46, tr_1);
				appendNode(td_1, tr_1);
				appendNode(span_2, td_1);
				appendNode(text_47, span_2);
				appendNode(text_48, tr_1);
				appendNode(td_2, tr_1);
				appendNode(span_3, td_2);
				appendNode(span_4, td_2);
				appendNode(svg, span_4);
				appendNode(use, svg);
				appendNode(text_50, table);
				appendNode(tr_2, table);
				appendNode(td_3, tr_2);
				appendNode(input_5, td_3);
				appendNode(text_51, tr_2);
				appendNode(td_4, tr_2);
				appendNode(span_5, td_4);
				appendNode(text_52, span_5);
				appendNode(text_53, tr_2);
				appendNode(td_5, tr_2);
				appendNode(span_6, td_5);
				appendNode(span_7, td_5);
				appendNode(svg_1, span_7);
				appendNode(use_1, svg_1);
				appendNode(text_55, table);
				appendNode(tr_3, table);
				appendNode(td_6, tr_3);
				appendNode(input_6, td_6);
				appendNode(text_56, tr_3);
				appendNode(td_7, tr_3);
				appendNode(span_8, td_7);
				appendNode(text_57, span_8);
				appendNode(text_58, tr_3);
				appendNode(td_8, tr_3);
				appendNode(span_9, td_8);
				appendNode(span_10, td_8);
				appendNode(svg_2, span_10);
				appendNode(use_2, svg_2);
				appendNode(text_60, table);
				appendNode(tr_4, table);
				appendNode(td_9, tr_4);
				appendNode(button_1, td_9);
				appendNode(text_61, button_1);
				appendNode(text_62, td_9);
				appendNode(span_11, td_9);
				appendNode(text_63, span_11);
				appendNode(input_7, span_11);
				appendNode(text_64, span_11);
				appendNode(text_65, td_9);
				appendNode(button_2, td_9);
				appendNode(text_66, button_2);
				appendNode(text_71, div_15);
				appendNode(div_21, div_15);
				appendNode(div_22, div_21);
				appendNode(div_23, div_22);
				appendNode(div_24, div_23);
				appendNode(div_25, div_24);
				appendNode(div_26, div_25);
				appendNode(div_27, div_26);
				appendNode(input_8, div_27);
				appendNode(text_73, div_25);
				appendNode(div_28, div_25);
				appendNode(text_75, div_24);
				appendNode(div_29, div_24);
				appendNode(div_30, div_29);
				appendNode(span_12, div_30);
				appendNode(text_76, span_12);
				appendNode(text_77, div_29);
				appendNode(div_31, div_29);
				appendNode(text_79, div_24);
				appendNode(div_32, div_24);
				appendNode(div_33, div_32);
				appendNode(span_13, div_33);
				appendNode(text_80, span_13);
				appendNode(text_81, div_32);
				appendNode(div_34, div_32);
				appendNode(text_83, div_24);
				appendNode(div_35, div_24);
				appendNode(div_36, div_35);
				appendNode(text_84, div_35);
				appendNode(div_37, div_35);
				appendNode(text_88, div_22);
				appendNode(div_38, div_22);
				appendNode(div_39, div_38);
				appendNode(div_40, div_39);
				appendNode(div_41, div_40);
				appendNode(div_42, div_41);
				appendNode(input_9, div_42);
				appendNode(text_90, div_40);
				appendNode(div_43, div_40);
				appendNode(text_91, div_43);
				appendNode(text_92, div_40);
				appendNode(div_44, div_40);
				appendNode(div_45, div_44);
				appendNode(text_94, div_40);
				appendNode(div_46, div_40);
				appendNode(div_47, div_46);
				appendNode(svg_3, div_47);
				appendNode(use_3, svg_3);
				appendNode(text_98, div_38);
				appendNode(div_48, div_38);
				appendNode(div_49, div_48);
				appendNode(div_50, div_49);
				appendNode(div_51, div_50);
				appendNode(input_10, div_51);
				appendNode(text_99, div_49);
				appendNode(div_52, div_49);
				appendNode(text_100, div_52);
				appendNode(text_101, div_49);
				appendNode(div_53, div_49);
				appendNode(div_54, div_53);
				appendNode(text_102, div_49);
				appendNode(div_55, div_49);
				appendNode(div_56, div_55);
				appendNode(svg_4, div_56);
				appendNode(use_4, svg_4);
				appendNode(text_103, div_38);
				appendNode(div_57, div_38);
				appendNode(div_58, div_57);
				appendNode(div_59, div_58);
				appendNode(div_60, div_59);
				appendNode(input_11, div_60);
				appendNode(text_104, div_58);
				appendNode(div_61, div_58);
				appendNode(text_105, div_61);
				appendNode(text_106, div_58);
				appendNode(div_62, div_58);
				appendNode(div_63, div_62);
				appendNode(text_107, div_58);
				appendNode(div_64, div_58);
				appendNode(div_65, div_64);
				appendNode(svg_5, div_65);
				appendNode(use_5, svg_5);
				appendNode(text_108, div_38);
				appendNode(div_66, div_38);
				appendNode(div_67, div_66);
				appendNode(div_68, div_67);
				appendNode(div_69, div_68);
				appendNode(input_12, div_69);
				appendNode(text_109, div_67);
				appendNode(div_70, div_67);
				appendNode(text_110, div_70);
				appendNode(text_111, div_67);
				appendNode(div_71, div_67);
				appendNode(div_72, div_71);
				appendNode(text_112, div_67);
				appendNode(div_73, div_67);
				appendNode(div_74, div_73);
				appendNode(svg_6, div_74);
				appendNode(use_6, svg_6);
				appendNode(text_113, div_38);
				appendNode(div_75, div_38);
				appendNode(div_76, div_75);
				appendNode(div_77, div_76);
				appendNode(div_78, div_77);
				appendNode(input_13, div_78);
				appendNode(text_114, div_76);
				appendNode(div_79, div_76);
				appendNode(text_115, div_79);
				appendNode(text_116, div_76);
				appendNode(div_80, div_76);
				appendNode(div_81, div_80);
				appendNode(text_117, div_76);
				appendNode(div_82, div_76);
				appendNode(div_83, div_82);
				appendNode(svg_7, div_83);
				appendNode(use_7, svg_7);
				appendNode(text_118, div_38);
				appendNode(div_84, div_38);
				appendNode(div_85, div_84);
				appendNode(div_86, div_85);
				appendNode(div_87, div_86);
				appendNode(input_14, div_87);
				appendNode(text_119, div_85);
				appendNode(div_88, div_85);
				appendNode(text_120, div_88);
				appendNode(text_121, div_85);
				appendNode(div_89, div_85);
				appendNode(div_90, div_89);
				appendNode(text_122, div_85);
				appendNode(div_91, div_85);
				appendNode(div_92, div_91);
				appendNode(svg_8, div_92);
				appendNode(use_8, svg_8);
				appendNode(text_123, div_38);
				appendNode(div_93, div_38);
				appendNode(div_94, div_93);
				appendNode(div_95, div_94);
				appendNode(div_96, div_95);
				appendNode(input_15, div_96);
				appendNode(text_124, div_94);
				appendNode(div_97, div_94);
				appendNode(text_125, div_97);
				appendNode(text_126, div_94);
				appendNode(div_98, div_94);
				appendNode(div_99, div_98);
				appendNode(text_127, div_94);
				appendNode(div_100, div_94);
				appendNode(div_101, div_100);
				appendNode(svg_9, div_101);
				appendNode(use_9, svg_9);
				appendNode(text_128, div_38);
				appendNode(div_102, div_38);
				appendNode(div_103, div_102);
				appendNode(div_104, div_103);
				appendNode(div_105, div_104);
				appendNode(input_16, div_105);
				appendNode(text_129, div_103);
				appendNode(div_106, div_103);
				appendNode(text_130, div_106);
				appendNode(text_131, div_103);
				appendNode(div_107, div_103);
				appendNode(div_108, div_107);
				appendNode(text_132, div_103);
				appendNode(div_109, div_103);
				appendNode(div_110, div_109);
				appendNode(svg_10, div_110);
				appendNode(use_10, svg_10);
				appendNode(text_133, div_38);
				appendNode(div_111, div_38);
				appendNode(div_112, div_111);
				appendNode(div_113, div_112);
				appendNode(div_114, div_113);
				appendNode(input_17, div_114);
				appendNode(text_134, div_112);
				appendNode(div_115, div_112);
				appendNode(text_135, div_115);
				appendNode(text_136, div_112);
				appendNode(div_116, div_112);
				appendNode(div_117, div_116);
				appendNode(text_137, div_112);
				appendNode(div_118, div_112);
				appendNode(div_119, div_118);
				appendNode(svg_11, div_119);
				appendNode(use_11, svg_11);
				appendNode(text_138, div_38);
				appendNode(div_120, div_38);
				appendNode(div_121, div_120);
				appendNode(div_122, div_121);
				appendNode(div_123, div_122);
				appendNode(input_18, div_123);
				appendNode(text_139, div_121);
				appendNode(div_124, div_121);
				appendNode(text_140, div_124);
				appendNode(text_141, div_121);
				appendNode(div_125, div_121);
				appendNode(div_126, div_125);
				appendNode(text_142, div_121);
				appendNode(div_127, div_121);
				appendNode(div_128, div_127);
				appendNode(svg_12, div_128);
				appendNode(use_12, svg_12);
				appendNode(text_143, div_38);
				appendNode(div_129, div_38);
				appendNode(div_130, div_129);
				appendNode(div_131, div_130);
				appendNode(div_132, div_131);
				appendNode(input_19, div_132);
				appendNode(text_144, div_130);
				appendNode(div_133, div_130);
				appendNode(text_145, div_133);
				appendNode(text_146, div_130);
				appendNode(div_134, div_130);
				appendNode(div_135, div_134);
				appendNode(text_147, div_130);
				appendNode(div_136, div_130);
				appendNode(div_137, div_136);
				appendNode(svg_13, div_137);
				appendNode(use_13, svg_13);
				appendNode(text_148, div_38);
				appendNode(div_138, div_38);
				appendNode(div_139, div_138);
				appendNode(div_140, div_139);
				appendNode(div_141, div_140);
				appendNode(input_20, div_141);
				appendNode(text_149, div_139);
				appendNode(div_142, div_139);
				appendNode(text_150, div_142);
				appendNode(text_151, div_139);
				appendNode(div_143, div_139);
				appendNode(div_144, div_143);
				appendNode(text_152, div_139);
				appendNode(div_145, div_139);
				appendNode(div_146, div_145);
				appendNode(svg_14, div_146);
				appendNode(use_14, svg_14);
				appendNode(text_153, div_38);
				appendNode(div_147, div_38);
				appendNode(div_148, div_147);
				appendNode(div_149, div_148);
				appendNode(div_150, div_149);
				appendNode(input_21, div_150);
				appendNode(text_154, div_148);
				appendNode(div_151, div_148);
				appendNode(text_155, div_151);
				appendNode(text_156, div_148);
				appendNode(div_152, div_148);
				appendNode(div_153, div_152);
				appendNode(text_157, div_148);
				appendNode(div_154, div_148);
				appendNode(div_155, div_154);
				appendNode(svg_15, div_155);
				appendNode(use_15, svg_15);
				appendNode(text_158, div_38);
				appendNode(div_156, div_38);
				appendNode(div_157, div_156);
				appendNode(div_158, div_157);
				appendNode(div_159, div_158);
				appendNode(input_22, div_159);
				appendNode(text_159, div_157);
				appendNode(div_160, div_157);
				appendNode(text_160, div_160);
				appendNode(text_161, div_157);
				appendNode(div_161, div_157);
				appendNode(div_162, div_161);
				appendNode(text_162, div_157);
				appendNode(div_163, div_157);
				appendNode(div_164, div_163);
				appendNode(svg_16, div_164);
				appendNode(use_16, svg_16);
				appendNode(text_163, div_38);
				appendNode(div_165, div_38);
				appendNode(div_166, div_165);
				appendNode(div_167, div_166);
				appendNode(div_168, div_167);
				appendNode(input_23, div_168);
				appendNode(text_164, div_166);
				appendNode(div_169, div_166);
				appendNode(text_165, div_169);
				appendNode(text_166, div_166);
				appendNode(div_170, div_166);
				appendNode(div_171, div_170);
				appendNode(text_167, div_166);
				appendNode(div_172, div_166);
				appendNode(div_173, div_172);
				appendNode(svg_17, div_173);
				appendNode(use_17, svg_17);
				appendNode(text_169, div_21);
				appendNode(div_174, div_21);
				appendNode(div_175, div_174);
				appendNode(div_176, div_175);
				appendNode(button_3, div_176);
				appendNode(text_170, button_3);
				appendNode(text_171, div_175);
				appendNode(div_177, div_175);
				appendNode(span_14, div_177);
				appendNode(text_172, span_14);
				appendNode(div_178, span_14);
				appendNode(input_24, div_178);
				appendNode(text_173, span_14);
				appendNode(span_15, span_14);
				appendNode(text_174, span_15);
				appendNode(text_175, div_175);
				appendNode(div_179, div_175);
				appendNode(button_4, div_179);
				appendNode(text_176, button_4);
				appendNode(text_177, div_21);
				appendNode(div_180, div_21);
				appendNode(div_181, div_180);
				appendNode(text_178, div_1);
				appendNode(div_182, div_1);
				appendNode(button_5, div_182);
				appendNode(text_179, button_5);
				current = true;
			},

			p: function update(changed, ctx) {
				if ((!current || changed.params) && text_2_value !== (text_2_value = ctx.params.reportType.title)) {
					setData(text_2, text_2_value);
				}

				if (changed.params) {
					each_value_1 = ctx.params.reportType.options;

					for (var i = 0; i < each_value_1.length; i += 1) {
						const child_ctx = get_each_context_1(ctx, each_value_1, i);

						if (each_blocks[i]) {
							each_blocks[i].p(changed, child_ctx);
						} else {
							each_blocks[i] = create_each_block_1(component, child_ctx);
							each_blocks[i].c();
							each_blocks[i].m(select, null);
						}
					}

					for (; i < each_blocks.length; i += 1) {
						each_blocks[i].d(1);
					}
					each_blocks.length = each_value_1.length;
				}

				if (ctx.reportType !== 'о восстановлении лесов') {
					if (if_block) {
						if_block.p(changed, ctx);
					} else {
						if_block = create_if_block_2(component, ctx);
						if (if_block) if_block.c();
					}

					if_block.i(div_4, text_6);
				} else if (if_block) {
					if_block.o(function() {
						if_block.d(1);
						if_block = null;
					});
				}

				var selectinput_changes = {};
				if (changed.cols) selectinput_changes.cols = ctx.cols;
				selectinput._set(selectinput_changes);

				var selectinput_1_changes = {};
				if (changed.cols) selectinput_1_changes.cols = ctx.cols;
				selectinput_1._set(selectinput_1_changes);

				var selectinput_2_changes = {};
				if (changed.cols) selectinput_2_changes.cols = ctx.cols;
				selectinput_2._set(selectinput_2_changes);

				var selectinput_3_changes = {};
				if (changed.cols) selectinput_3_changes.cols = ctx.cols;
				selectinput_3._set(selectinput_3_changes);

				var selectinput_4_changes = {};
				if (changed.cols) selectinput_4_changes.cols = ctx.cols;
				selectinput_4._set(selectinput_4_changes);

				var selectinput_5_changes = {};
				if (changed.cols) selectinput_5_changes.cols = ctx.cols;
				selectinput_5._set(selectinput_5_changes);

				var selectinput_6_changes = {};
				if (changed.cols) selectinput_6_changes.cols = ctx.cols;
				selectinput_6._set(selectinput_6_changes);

				var selectinput_7_changes = {};
				if (changed.cols) selectinput_7_changes.cols = ctx.cols;
				selectinput_7._set(selectinput_7_changes);

				var selectinput_8_changes = {};
				if (changed.cols) selectinput_8_changes.cols = ctx.cols;
				selectinput_8._set(selectinput_8_changes);

				if (ctx.quadrantIds) {
					if (if_block_1) {
						if_block_1.p(changed, ctx);
					} else {
						if_block_1 = create_if_block_3(component, ctx);
						if_block_1.c();
						if_block_1.m(select_1, null);
					}
				} else if (if_block_1) {
					if_block_1.d(1);
					if_block_1 = null;
				}

				if ((!current || changed.layerItems) && text_35_value !== (text_35_value = ctx.layerItems.length)) {
					setData(text_35, text_35_value);
				}
			},

			i: function intro(target, anchor) {
				if (current) return;

				this.m(target, anchor);
			},

			o: function outro(outrocallback) {
				if (!current) return;

				outrocallback = callAfter(outrocallback, 10);

				if (if_block) if_block.o(outrocallback);
				else outrocallback();

				selectinput._fragment.o(outrocallback);
				selectinput_1._fragment.o(outrocallback);
				selectinput_2._fragment.o(outrocallback);
				selectinput_3._fragment.o(outrocallback);
				selectinput_4._fragment.o(outrocallback);
				selectinput_5._fragment.o(outrocallback);
				selectinput_6._fragment.o(outrocallback);
				selectinput_7._fragment.o(outrocallback);
				selectinput_8._fragment.o(outrocallback);
				current = false;
			},

			d: function destroy$$1(detach) {
				if (detach) {
					detachNode(div);
				}

				destroyEach(each_blocks, detach);

				removeListener(select, "change", change_handler);
				if (if_block) if_block.d();
				selectinput.destroy();
				selectinput_1.destroy();
				selectinput_2.destroy();
				selectinput_3.destroy();
				selectinput_4.destroy();
				selectinput_5.destroy();
				selectinput_6.destroy();
				selectinput_7.destroy();
				selectinput_8.destroy();
				if (if_block_1) if_block_1.d();
				removeListener(select_1, "click", click_handler);
			}
		};
	}

	function get_each_context$1(ctx, list, i) {
		const child_ctx = Object.create(ctx);
		child_ctx.it = list[i];
		child_ctx.each_value = list;
		child_ctx.it_index = i;
		return child_ctx;
	}

	function get_each_context_1(ctx, list, i) {
		const child_ctx = Object.create(ctx);
		child_ctx.it = list[i];
		child_ctx.each_value_1 = list;
		child_ctx.it_index_1 = i;
		return child_ctx;
	}

	function get_each_context_2(ctx, list, i) {
		const child_ctx = Object.create(ctx);
		child_ctx.it = list[i];
		child_ctx.each_value_2 = list;
		child_ctx.it_index_2 = i;
		return child_ctx;
	}

	function App(options) {
		this._debugName = '<App>';
		if (!options || (!options.target && !options.root)) throw new Error("'target' is a required option");
		init(this, options);
		this._state = assign(data$1(), options.data);
		if (!('limit' in this._state)) console.warn("<App> was created without expected data property 'limit'");
		if (!('layerIds' in this._state)) console.warn("<App> was created without expected data property 'layerIds'");
		if (!('layerId' in this._state)) console.warn("<App> was created without expected data property 'layerId'");
		if (!('params' in this._state)) console.warn("<App> was created without expected data property 'params'");
		if (!('reportType' in this._state)) console.warn("<App> was created without expected data property 'reportType'");
		if (!('cols' in this._state)) console.warn("<App> was created without expected data property 'cols'");
		if (!('quadrantIds' in this._state)) console.warn("<App> was created without expected data property 'quadrantIds'");
		if (!('quadrantId' in this._state)) console.warn("<App> was created without expected data property 'quadrantId'");
		if (!('layerItems' in this._state)) console.warn("<App> was created without expected data property 'layerItems'");
		this._intro = !!options.intro;

		this._handlers.state = [onstate$1];
		this._handlers.update = [onupdate];

		this._handlers.destroy = [ondestroy];

		if (!options.root) {
			this._oncreate = [];
			this._beforecreate = [];
			this._aftercreate = [];
		}

		this._fragment = create_main_fragment$1(this, this._state);

		this.root._oncreate.push(() => {
			onstate$1.call(this, { changed: assignTrue({}, this._state), current: this._state });
			oncreate$1.call(this);
			this.fire("update", { changed: assignTrue({}, this._state), current: this._state });
		});

		if (options.target) {
			if (options.hydrate) throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
			this._fragment.c();
			this._mount(options.target, options.anchor);

			this._lock = true;
			callAll(this._beforecreate);
			callAll(this._oncreate);
			callAll(this._aftercreate);
			this._lock = false;
		}

		this._intro = true;
	}

	assign(App.prototype, protoDev);
	assign(App.prototype, methods$1);

	App.prototype._checkReadOnly = function _checkReadOnly(newState) {
	};

	exports.App = App;

	return exports;

}({}));
//# sourceMappingURL=forest.js.map
