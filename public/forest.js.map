{"version":3,"file":"forest.js","sources":["../node_modules/svelte/shared.js","../src/Table.html","../src/SelectInput.html","../src/App.html"],"sourcesContent":["function noop() {}\n\nfunction assign(tar, src) {\n\tfor (var k in src) tar[k] = src[k];\n\treturn tar;\n}\n\nfunction assignTrue(tar, src) {\n\tfor (var k in src) tar[k] = 1;\n\treturn tar;\n}\n\nfunction isPromise(value) {\n\treturn value && typeof value.then === 'function';\n}\n\nfunction callAfter(fn, i) {\n\tif (i === 0) fn();\n\treturn () => {\n\t\tif (!--i) fn();\n\t};\n}\n\nfunction addLoc(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nfunction exclude(src, prop) {\n\tconst tar = {};\n\tfor (const k in src) k === prop || (tar[k] = src[k]);\n\treturn tar;\n}\n\nfunction appendNode(node, target) {\n\ttarget.appendChild(node);\n}\n\nfunction insertNode(node, target, anchor) {\n\ttarget.insertBefore(node, anchor);\n}\n\nfunction detachNode(node) {\n\tnode.parentNode.removeChild(node);\n}\n\nfunction detachBetween(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction detachBefore(after) {\n\twhile (after.previousSibling) {\n\t\tafter.parentNode.removeChild(after.previousSibling);\n\t}\n}\n\nfunction detachAfter(before) {\n\twhile (before.nextSibling) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction reinsertBetween(before, after, target) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\ttarget.appendChild(before.parentNode.removeChild(before.nextSibling));\n\t}\n}\n\nfunction reinsertChildren(parent, target) {\n\twhile (parent.firstChild) target.appendChild(parent.firstChild);\n}\n\nfunction reinsertAfter(before, target) {\n\twhile (before.nextSibling) target.appendChild(before.nextSibling);\n}\n\nfunction reinsertBefore(after, target) {\n\tvar parent = after.parentNode;\n\twhile (parent.firstChild !== after) target.appendChild(parent.firstChild);\n}\n\nfunction destroyEach(iterations, detach) {\n\tfor (var i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detach);\n\t}\n}\n\nfunction createFragment() {\n\treturn document.createDocumentFragment();\n}\n\nfunction createElement(name) {\n\treturn document.createElement(name);\n}\n\nfunction createSvgElement(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction createText(data) {\n\treturn document.createTextNode(data);\n}\n\nfunction createComment() {\n\treturn document.createComment('');\n}\n\nfunction addListener(node, event, handler) {\n\tnode.addEventListener(event, handler, false);\n}\n\nfunction removeListener(node, event, handler) {\n\tnode.removeEventListener(event, handler, false);\n}\n\nfunction setAttribute(node, attribute, value) {\n\tnode.setAttribute(attribute, value);\n}\n\nfunction setAttributes(node, attributes) {\n\tfor (var key in attributes) {\n\t\tif (key in node) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tif (attributes[key] === undefined) removeAttribute(node, key);\n\t\t\telse setAttribute(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\nfunction removeAttribute(node, attribute) {\n\tnode.removeAttribute(attribute);\n}\n\nfunction setXlinkAttribute(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\nfunction getBindingGroupValue(group) {\n\tvar value = [];\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.push(group[i].__value);\n\t}\n\treturn value;\n}\n\nfunction toNumber(value) {\n\treturn value === '' ? undefined : +value;\n}\n\nfunction timeRangesToArray(ranges) {\n\tvar array = [];\n\tfor (var i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\nfunction children (element) {\n\treturn Array.from(element.childNodes);\n}\n\nfunction claimElement (nodes, name, attributes, svg) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeName === name) {\n\t\t\tfor (var j = 0; j < node.attributes.length; j += 1) {\n\t\t\t\tvar attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) node.removeAttribute(attribute.name);\n\t\t\t}\n\t\t\treturn nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n\t\t}\n\t}\n\n\treturn svg ? createSvgElement(name) : createElement(name);\n}\n\nfunction claimText (nodes, data) {\n\tfor (var i = 0; i < nodes.length; i += 1) {\n\t\tvar node = nodes[i];\n\t\tif (node.nodeType === 3) {\n\t\t\tnode.data = data;\n\t\t\treturn nodes.splice(i, 1)[0];\n\t\t}\n\t}\n\n\treturn createText(data);\n}\n\nfunction setData(text, data) {\n\ttext.data = '' + data;\n}\n\nfunction setInputType(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {}\n}\n\nfunction setStyle(node, key, value) {\n\tnode.style.setProperty(key, value);\n}\n\nfunction selectOption(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nfunction selectOptions(select, value) {\n\tfor (var i = 0; i < select.options.length; i += 1) {\n\t\tvar option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nfunction selectValue(select) {\n\tvar selectedOption = select.querySelector(':checked') || select.options[0];\n\treturn selectedOption && selectedOption.__value;\n}\n\nfunction selectMultipleValue(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), function(option) {\n\t\treturn option.__value;\n\t});\n}\n\nfunction addResizeListener(element, fn) {\n\tif (getComputedStyle(element).position === 'static') {\n\t\telement.style.position = 'relative';\n\t}\n\n\tconst object = document.createElement('object');\n\tobject.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n\tobject.type = 'text/html';\n\n\tlet win;\n\n\tobject.onload = () => {\n\t\twin = object.contentDocument.defaultView;\n\t\twin.addEventListener('resize', fn);\n\t};\n\n\tif (/Trident/.test(navigator.userAgent)) {\n\t\telement.appendChild(object);\n\t\tobject.data = 'about:blank';\n\t} else {\n\t\tobject.data = 'about:blank';\n\t\telement.appendChild(object);\n\t}\n\n\treturn {\n\t\tcancel: () => {\n\t\t\twin && win.removeEventListener('resize', fn);\n\t\t\telement.removeChild(object);\n\t\t}\n\t};\n}\n\nfunction linear(t) {\n\treturn t;\n}\n\nfunction generateRule({ a, b, delta, duration }, ease, fn) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + delta * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\n\treturn keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n}\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\nfunction wrapTransition(component, node, fn, params, intro) {\n\tlet obj = fn(node, params);\n\tlet duration;\n\tlet ease;\n\tlet cssText;\n\n\tlet initialised = false;\n\n\treturn {\n\t\tt: intro ? 0 : 1,\n\t\trunning: false,\n\t\tprogram: null,\n\t\tpending: null,\n\n\t\trun(b, callback) {\n\t\t\tif (typeof obj === 'function') {\n\t\t\t\ttransitionManager.wait().then(() => {\n\t\t\t\t\tobj = obj();\n\t\t\t\t\tthis._run(b, callback);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._run(b, callback);\n\t\t\t}\n\t\t},\n\n\t\t_run(b, callback) {\n\t\t\tduration = obj.duration || 300;\n\t\t\tease = obj.easing || linear;\n\n\t\t\tconst program = {\n\t\t\t\tstart: window.performance.now() + (obj.delay || 0),\n\t\t\t\tb,\n\t\t\t\tcallback: callback || noop\n\t\t\t};\n\n\t\t\tif (intro && !initialised) {\n\t\t\t\tif (obj.css && obj.delay) {\n\t\t\t\t\tcssText = node.style.cssText;\n\t\t\t\t\tnode.style.cssText += obj.css(0, 1);\n\t\t\t\t}\n\n\t\t\t\tif (obj.tick) obj.tick(0, 1);\n\t\t\t\tinitialised = true;\n\t\t\t}\n\n\t\t\tif (!b) {\n\t\t\t\tprogram.group = outros.current;\n\t\t\t\toutros.current.remaining += 1;\n\t\t\t}\n\n\t\t\tif (obj.delay) {\n\t\t\t\tthis.pending = program;\n\t\t\t} else {\n\t\t\t\tthis.start(program);\n\t\t\t}\n\n\t\t\tif (!this.running) {\n\t\t\t\tthis.running = true;\n\t\t\t\ttransitionManager.add(this);\n\t\t\t}\n\t\t},\n\n\t\tstart(program) {\n\t\t\tcomponent.fire(`${program.b ? 'intro' : 'outro'}.start`, { node });\n\n\t\t\tprogram.a = this.t;\n\t\t\tprogram.delta = program.b - program.a;\n\t\t\tprogram.duration = duration * Math.abs(program.b - program.a);\n\t\t\tprogram.end = program.start + program.duration;\n\n\t\t\tif (obj.css) {\n\t\t\t\tif (obj.delay) node.style.cssText = cssText;\n\n\t\t\t\tconst rule = generateRule(program, ease, obj.css);\n\t\t\t\ttransitionManager.addRule(rule, program.name = '__svelte_' + hash(rule));\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(anim => anim && (program.delta < 0 || !/__svelte/.test(anim)))\n\t\t\t\t\t.concat(`${program.name} ${program.duration}ms linear 1 forwards`)\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tthis.program = program;\n\t\t\tthis.pending = null;\n\t\t},\n\n\t\tupdate(now) {\n\t\t\tconst program = this.program;\n\t\t\tif (!program) return;\n\n\t\t\tconst p = now - program.start;\n\t\t\tthis.t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (obj.tick) obj.tick(this.t, 1 - this.t);\n\t\t},\n\n\t\tdone() {\n\t\t\tconst program = this.program;\n\t\t\tthis.t = program.b;\n\n\t\t\tif (obj.tick) obj.tick(this.t, 1 - this.t);\n\n\t\t\tcomponent.fire(`${program.b ? 'intro' : 'outro'}.end`, { node });\n\n\t\t\tif (!program.b && !program.invalidated) {\n\t\t\t\tprogram.group.callbacks.push(() => {\n\t\t\t\t\tprogram.callback();\n\t\t\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\t\t});\n\n\t\t\t\tif (--program.group.remaining === 0) {\n\t\t\t\t\tprogram.group.callbacks.forEach(fn => {\n\t\t\t\t\t\tfn();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (obj.css) transitionManager.deleteRule(node, program.name);\n\t\t\t}\n\n\t\t\tthis.running = !!this.pending;\n\t\t},\n\n\t\tabort(reset) {\n\t\t\tif (this.program) {\n\t\t\t\tif (reset && obj.tick) obj.tick(1, 0);\n\t\t\t\tif (obj.css) transitionManager.deleteRule(node, this.program.name);\n\t\t\t\tthis.program = this.pending = null;\n\t\t\t\tthis.running = false;\n\t\t\t}\n\t\t},\n\n\t\tinvalidate() {\n\t\t\tif (this.program) {\n\t\t\t\tthis.program.invalidated = true;\n\t\t\t}\n\t\t}\n\t};\n}\n\nlet outros = {};\n\nfunction groupOutros() {\n\toutros.current = {\n\t\tremaining: 0,\n\t\tcallbacks: []\n\t};\n}\n\nvar transitionManager = {\n\trunning: false,\n\ttransitions: [],\n\tbound: null,\n\tstylesheet: null,\n\tactiveRules: {},\n\tpromise: null,\n\n\tadd(transition) {\n\t\tthis.transitions.push(transition);\n\n\t\tif (!this.running) {\n\t\t\tthis.running = true;\n\t\t\trequestAnimationFrame(this.bound || (this.bound = this.next.bind(this)));\n\t\t}\n\t},\n\n\taddRule(rule, name) {\n\t\tif (!this.stylesheet) {\n\t\t\tconst style = createElement('style');\n\t\t\tdocument.head.appendChild(style);\n\t\t\ttransitionManager.stylesheet = style.sheet;\n\t\t}\n\n\t\tif (!this.activeRules[name]) {\n\t\t\tthis.activeRules[name] = true;\n\t\t\tthis.stylesheet.insertRule(`@keyframes ${name} ${rule}`, this.stylesheet.cssRules.length);\n\t\t}\n\t},\n\n\tnext() {\n\t\tthis.running = false;\n\n\t\tconst now = window.performance.now();\n\t\tlet i = this.transitions.length;\n\n\t\twhile (i--) {\n\t\t\tconst transition = this.transitions[i];\n\n\t\t\tif (transition.program && now >= transition.program.end) {\n\t\t\t\ttransition.done();\n\t\t\t}\n\n\t\t\tif (transition.pending && now >= transition.pending.start) {\n\t\t\t\ttransition.start(transition.pending);\n\t\t\t}\n\n\t\t\tif (transition.running) {\n\t\t\t\ttransition.update(now);\n\t\t\t\tthis.running = true;\n\t\t\t} else if (!transition.pending) {\n\t\t\t\tthis.transitions.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tif (this.running) {\n\t\t\trequestAnimationFrame(this.bound);\n\t\t} else if (this.stylesheet) {\n\t\t\tlet i = this.stylesheet.cssRules.length;\n\t\t\twhile (i--) this.stylesheet.deleteRule(i);\n\t\t\tthis.activeRules = {};\n\t\t}\n\t},\n\n\tdeleteRule(node, name) {\n\t\tnode.style.animation = node.style.animation\n\t\t\t.split(', ')\n\t\t\t.filter(anim => anim && anim.indexOf(name) === -1)\n\t\t\t.join(', ');\n\t},\n\n\twait() {\n\t\tif (!transitionManager.promise) {\n\t\t\ttransitionManager.promise = Promise.resolve();\n\t\t\ttransitionManager.promise.then(() => {\n\t\t\t\ttransitionManager.promise = null;\n\t\t\t});\n\t\t}\n\n\t\treturn transitionManager.promise;\n\t}\n};\n\nfunction wrapAnimation(node, from, fn, params) {\n\tif (!from) return;\n\n\tconst to = node.getBoundingClientRect();\n\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return;\n\n\tconst info = fn(node, { from, to }, params);\n\n\tconst duration = 'duration' in info ? info.duration : 300;\n\tconst delay = 'delay' in info ? info.delay : 0;\n\tconst ease = info.easing || linear;\n\tconst start = window.performance.now() + delay;\n\tconst end = start + duration;\n\n\tconst program = {\n\t\ta: 0,\n\t\tt: 0,\n\t\tb: 1,\n\t\tdelta: 1,\n\t\tduration,\n\t\tstart,\n\t\tend\n\t};\n\n\tconst cssText = node.style.cssText;\n\n\tconst animation = {\n\t\tpending: delay ? program : null,\n\t\tprogram: delay ? null : program,\n\t\trunning: true,\n\n\t\tstart() {\n\t\t\tif (info.css) {\n\t\t\t\tif (delay) node.style.cssText = cssText;\n\n\t\t\t\tconst rule = generateRule(program, ease, info.css);\n\t\t\t\tprogram.name = `__svelte_${hash(rule)}`;\n\n\t\t\t\ttransitionManager.addRule(rule, program.name);\n\n\t\t\t\tnode.style.animation = (node.style.animation || '')\n\t\t\t\t\t.split(', ')\n\t\t\t\t\t.filter(anim => anim && (program.delta < 0 || !/__svelte/.test(anim)))\n\t\t\t\t\t.concat(`${program.name} ${program.duration}ms linear 1 forwards`)\n\t\t\t\t\t.join(', ');\n\t\t\t}\n\n\t\t\tanimation.program = program;\n\t\t\tanimation.pending = null;\n\t\t},\n\n\t\tupdate: now => {\n\t\t\tconst p = now - program.start;\n\t\t\tconst t = program.a + program.delta * ease(p / program.duration);\n\t\t\tif (info.tick) info.tick(t, 1 - t);\n\t\t},\n\n\t\tdone() {\n\t\t\tif (info.tick) info.tick(1, 0);\n\t\t\tanimation.stop();\n\t\t},\n\n\t\tstop() {\n\t\t\tif (info.css) transitionManager.deleteRule(node, program.name);\n\t\t\tanimation.running = false;\n\t\t}\n\t};\n\n\ttransitionManager.add(animation);\n\n\tif (info.tick) info.tick(0, 1);\n\n\tif (delay) {\n\t\tif (info.css) node.style.cssText += info.css(0, 1);\n\t} else {\n\t\tanimation.start();\n\t}\n\n\treturn animation;\n}\n\nfunction fixPosition(node) {\n\tconst style = getComputedStyle(node);\n\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\n\t\tconst { width, height } = style;\n\t\tconst a = node.getBoundingClientRect();\n\t\tnode.style.position = 'absolute';\n\t\tnode.style.width = width;\n\t\tnode.style.height = height;\n\t\tconst b = node.getBoundingClientRect();\n\n\t\tif (a.left !== b.left || a.top !== b.top) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n\t\t}\n\t}\n}\n\nfunction handlePromise(promise, info) {\n\tvar token = info.token = {};\n\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\n\t\tinfo.resolved = key && { [key]: value };\n\n\t\tconst child_ctx = assign(assign({}, info.ctx), info.resolved);\n\t\tconst block = type && (info.current = type)(info.component, child_ctx);\n\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroupOutros();\n\t\t\t\t\t\tblock.o(() => {\n\t\t\t\t\t\t\tblock.d(1);\n\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\n\t\t\tblock.c();\n\t\t\tblock[block.i ? 'i' : 'm'](info.mount(), info.anchor);\n\n\t\t\tinfo.component.root.set({}); // flush any handlers that were created\n\t\t}\n\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t}\n\n\tif (isPromise(promise)) {\n\t\tpromise.then(value => {\n\t\t\tupdate(info.then, 1, info.value, value);\n\t\t}, error => {\n\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t});\n\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\n\t\tinfo.resolved = { [info.value]: promise };\n\t}\n}\n\nfunction destroyBlock(block, lookup) {\n\tblock.d(1);\n\tlookup[block.key] = null;\n}\n\nfunction outroAndDestroyBlock(block, lookup) {\n\tblock.o(function() {\n\t\tdestroyBlock(block, lookup);\n\t});\n}\n\nfunction fixAndOutroAndDestroyBlock(block, lookup) {\n\tblock.f();\n\toutroAndDestroyBlock(block, lookup);\n}\n\nfunction updateKeyedEach(old_blocks, component, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, intro_method, next, get_context) {\n\tvar o = old_blocks.length;\n\tvar n = list.length;\n\n\tvar i = o;\n\tvar old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\n\tvar new_blocks = [];\n\tvar new_lookup = {};\n\tvar deltas = {};\n\n\tvar i = n;\n\twhile (i--) {\n\t\tvar child_ctx = get_context(ctx, list, i);\n\t\tvar key = get_key(child_ctx);\n\t\tvar block = lookup[key];\n\n\t\tif (!block) {\n\t\t\tblock = create_each_block(component, key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\tblock.p(changed, child_ctx);\n\t\t}\n\n\t\tnew_blocks[i] = new_lookup[key] = block;\n\n\t\tif (key in old_indexes) deltas[key] = Math.abs(i - old_indexes[key]);\n\t}\n\n\tvar will_move = {};\n\tvar did_move = {};\n\n\tfunction insert(block) {\n\t\tblock[intro_method](node, next);\n\t\tlookup[block.key] = block;\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\n\twhile (o && n) {\n\t\tvar new_block = new_blocks[n - 1];\n\t\tvar old_block = old_blocks[o - 1];\n\t\tvar new_key = new_block.key;\n\t\tvar old_key = old_block.key;\n\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t}\n\n\t\telse if (!new_lookup[old_key]) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t}\n\n\t\telse if (!lookup[new_key] || will_move[new_key]) {\n\t\t\tinsert(new_block);\n\t\t}\n\n\t\telse if (did_move[old_key]) {\n\t\t\to--;\n\n\t\t} else if (deltas[new_key] > deltas[old_key]) {\n\t\t\tdid_move[new_key] = true;\n\t\t\tinsert(new_block);\n\n\t\t} else {\n\t\t\twill_move[old_key] = true;\n\t\t\to--;\n\t\t}\n\t}\n\n\twhile (o--) {\n\t\tvar old_block = old_blocks[o];\n\t\tif (!new_lookup[old_block.key]) destroy(old_block, lookup);\n\t}\n\n\twhile (n) insert(new_blocks[n - 1]);\n\n\treturn new_blocks;\n}\n\nfunction measure(blocks) {\n\tconst rects = {};\n\tlet i = blocks.length;\n\twhile (i--) rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n\treturn rects;\n}\n\nfunction animate(blocks, rects, fn, params) {\n\tlet i = blocks.length;\n\twhile (i--) {\n\t\tconst block = blocks[i];\n\t\tconst from = rects[block.key];\n\n\t\tif (!from) continue;\n\t\tconst to = block.node.getBoundingClientRect();\n\n\t\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) continue;\n\n\n\t}\n}\n\nfunction getSpreadUpdate(levels, updates) {\n\tvar update = {};\n\n\tvar to_null_out = {};\n\tvar accounted_for = {};\n\n\tvar i = levels.length;\n\twhile (i--) {\n\t\tvar o = levels[i];\n\t\tvar n = updates[i];\n\n\t\tif (n) {\n\t\t\tfor (var key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\n\t\t\tfor (var key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (var key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\n\treturn update;\n}\n\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nconst invalidAttributeNameCharacter = /[\\s'\">\\/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n\nfunction spread(args) {\n\tconst attributes = Object.assign({}, ...args);\n\tlet str = '';\n\n\tObject.keys(attributes).forEach(name => {\n\t\tif (invalidAttributeNameCharacter.test(name)) return;\n\n\t\tconst value = attributes[name];\n\t\tif (value === undefined) return;\n\t\tif (value === true) str += \" \" + name;\n\n\t\tconst escaped = String(value)\n\t\t\t.replace(/\"/g, '&#34;')\n\t\t\t.replace(/'/g, '&#39;');\n\n\t\tstr += \" \" + name + \"=\" + JSON.stringify(escaped);\n\t});\n\n\treturn str;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;'\n};\n\nfunction escape(html) {\n\treturn String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\n\nfunction each(items, assign, fn) {\n\tlet str = '';\n\tfor (let i = 0; i < items.length; i += 1) {\n\t\tstr += fn(assign(items[i], i));\n\t}\n\treturn str;\n}\n\nconst missingComponent = {\n\t_render: () => ''\n};\n\nfunction validateSsrComponent(component, name) {\n\tif (!component || !component._render) {\n\t\tif (name === 'svelte:component') name += 'this={...}';\n\t\tthrow new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n\t}\n\n\treturn component;\n}\n\nfunction blankObject() {\n\treturn Object.create(null);\n}\n\nfunction destroy(detach) {\n\tthis.destroy = noop;\n\tthis.fire('destroy');\n\tthis.set = noop;\n\n\tthis._fragment.d(detach !== false);\n\tthis._fragment = null;\n\tthis._state = {};\n}\n\nfunction destroyDev(detach) {\n\tdestroy.call(this, detach);\n\tthis.destroy = function() {\n\t\tconsole.warn('Component was already destroyed');\n\t};\n}\n\nfunction _differs(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction _differsImmutable(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\nfunction fire(eventName, data) {\n\tvar handlers =\n\t\teventName in this._handlers && this._handlers[eventName].slice();\n\tif (!handlers) return;\n\n\tfor (var i = 0; i < handlers.length; i += 1) {\n\t\tvar handler = handlers[i];\n\n\t\tif (!handler.__calling) {\n\t\t\ttry {\n\t\t\t\thandler.__calling = true;\n\t\t\t\thandler.call(this, data);\n\t\t\t} finally {\n\t\t\t\thandler.__calling = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction get() {\n\treturn this._state;\n}\n\nfunction init(component, options) {\n\tcomponent._handlers = blankObject();\n\tcomponent._bind = options._bind;\n\n\tcomponent.options = options;\n\tcomponent.root = options.root || component;\n\tcomponent.store = options.store || component.root.store;\n}\n\nfunction on(eventName, handler) {\n\tvar handlers = this._handlers[eventName] || (this._handlers[eventName] = []);\n\thandlers.push(handler);\n\n\treturn {\n\t\tcancel: function() {\n\t\t\tvar index = handlers.indexOf(handler);\n\t\t\tif (~index) handlers.splice(index, 1);\n\t\t}\n\t};\n}\n\nfunction run(fn) {\n\tfn();\n}\n\nfunction set(newState) {\n\tthis._set(assign({}, newState));\n\tif (this.root._lock) return;\n\tthis.root._lock = true;\n\tcallAll(this.root._beforecreate);\n\tcallAll(this.root._oncreate);\n\tcallAll(this.root._aftercreate);\n\tthis.root._lock = false;\n}\n\nfunction _set(newState) {\n\tvar oldState = this._state,\n\t\tchanged = {},\n\t\tdirty = false;\n\n\tfor (var key in newState) {\n\t\tif (this._differs(newState[key], oldState[key])) changed[key] = dirty = true;\n\t}\n\tif (!dirty) return;\n\n\tthis._state = assign(assign({}, oldState), newState);\n\tthis._recompute(changed, this._state);\n\tif (this._bind) this._bind(changed, this._state);\n\n\tif (this._fragment) {\n\t\tthis.fire(\"state\", { changed: changed, current: this._state, previous: oldState });\n\t\tthis._fragment.p(changed, this._state);\n\t\tthis.fire(\"update\", { changed: changed, current: this._state, previous: oldState });\n\t}\n}\n\nfunction setDev(newState) {\n\tif (typeof newState !== 'object') {\n\t\tthrow new Error(\n\t\t\tthis._debugName + '.set was called without an object of data key-values to update.'\n\t\t);\n\t}\n\n\tthis._checkReadOnly(newState);\n\tset.call(this, newState);\n}\n\nfunction callAll(fns) {\n\twhile (fns && fns.length) fns.shift()();\n}\n\nfunction _mount(target, anchor) {\n\tthis._fragment[this._fragment.i ? 'i' : 'm'](target, anchor || null);\n}\n\nvar PENDING = {};\nvar SUCCESS = {};\nvar FAILURE = {};\n\nfunction removeFromStore() {\n\tthis.store._remove(this);\n}\n\nvar proto = {\n\tdestroy,\n\tget,\n\tfire,\n\ton,\n\tset,\n\t_recompute: noop,\n\t_set,\n\t_mount,\n\t_differs\n};\n\nvar protoDev = {\n\tdestroy: destroyDev,\n\tget,\n\tfire,\n\ton,\n\tset: setDev,\n\t_recompute: noop,\n\t_set,\n\t_mount,\n\t_differs\n};\n\nexport { blankObject, destroy, destroyDev, _differs, _differsImmutable, fire, get, init, on, run, set, _set, setDev, callAll, _mount, PENDING, SUCCESS, FAILURE, removeFromStore, proto, protoDev, wrapAnimation, fixPosition, handlePromise, appendNode, insertNode, detachNode, detachBetween, detachBefore, detachAfter, reinsertBetween, reinsertChildren, reinsertAfter, reinsertBefore, destroyEach, createFragment, createElement, createSvgElement, createText, createComment, addListener, removeListener, setAttribute, setAttributes, removeAttribute, setXlinkAttribute, getBindingGroupValue, toNumber, timeRangesToArray, children, claimElement, claimText, setData, setInputType, setStyle, selectOption, selectOptions, selectValue, selectMultipleValue, addResizeListener, destroyBlock, outroAndDestroyBlock, fixAndOutroAndDestroyBlock, updateKeyedEach, measure, animate, getSpreadUpdate, invalidAttributeNameCharacter, spread, escaped, escape, each, missingComponent, validateSsrComponent, linear, generateRule, hash, wrapTransition, outros, groupOutros, transitionManager, noop, assign, assignTrue, isPromise, callAfter, addLoc, exclude };\n","\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsortType: 'desc',\t// 'asc'\n\t\t\tsortKey: 'gmx_id',\t// 'FRSTAT'\n\t\t\treverse: false,\n\t\t\tpageCurr: 1,\n\t\t\tpagesize: 15,\n\t\t\tpageFrom: 0,\n\t\t\ttableItems: [],\n\t\t\titems: [],\n\t\t\tchecked: {},\n\t\t\thashCols: []\n\t\t};\n\t},\n\tmethods: {\n\t\tsort(key) {\n\t\t\tconst { sortType } = this.get();\n\t\t\tthis.set({sortType: sortType === 'desc' ? 'asc' : 'desc', sortKey: key});\n\t\t\tthis.setCurrPage(1);\n\t\t},\n\t\tcheckReverse(ev) {\n// console.log('checkReverse', ev.ctrlKey);\n\n\t\t\tlet nChecked = {};\n\t\t\tlet ctrlKey = ev.ctrlKey;\n\t\t\tlet isChecked = ev.target.checked;\n\t\t\t\n\t\t\tif (ctrlKey || isChecked) {\n\t\t\t\tconst { items, hashCols, checked } = this.get();\n\t\t\t\tlet nm = hashCols.gmx_id;\n\t\t\t\titems.forEach((it) => {\n\t\t\t\t\tlet id = it[nm];\n\t\t\t\t\tif (!ctrlKey || !checked[id]) {\n\t\t\t\t\t\tnChecked[id] = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.set({checked: nChecked});\n\t\t\tthis.root.set({checked: nChecked});\n\t\t},\n\t\tcheckMe(id) {\n\t\t\tconst { checked } = this.get();\n\t\t\tif (checked[id]) {\n\t\t\t\tdelete checked[id];\n\t\t\t} else {\n\t\t\t\tchecked[id] = true;\n\t\t\t}\n\t\t\tthis.set({checked: checked});\n\t\t\tthis.root.set({checked: checked});\n\t\t},\n\t\tsortMe(arr, sortKey, hashCols, sortType) {\n\t\t\tlet nm = hashCols[sortKey];\n\t\t\treturn arr.sort((a, b) => {\n\t\t\t\tlet x = b[nm];\n\t\t\t\tlet y = a[nm];\n                return (x < y ? -1 : (x > y ? 1 : 0)) * (sortType === 'desc' ? -1 : 1);\n\t\t\t});\n\t\t},\n\t\tpageTo(nm) {\n\t\t\tconst { pageFrom } = this.get();\n\t\t\tthis.set({pageCurr: nm});\n\t\t\tnm = nm < 1 ? 1 : (nm > pageFrom ? pageFrom : nm);\n\t\t\tthis.setCurrPage(nm);\n\t\t\treturn nm;\n\t\t},\n\t\tsetCurrPage(nm) {\n\t\t\tconst { items, hashCols, pageCurr, pagesize, sortKey, sortType } = this.get();\n\t\t\tnm = nm || pageCurr;\n\t\t\tconst beg = pagesize * (nm - 1);\n\n\t\t\tlet arr = (sortKey ? this.sortMe(items, sortKey, hashCols, sortType) : items)\n\t\t\t\t.slice(beg, beg + pagesize);\n\n\t\t\tconst cnt = items.length / pagesize;\n\t\t\tconst pf = Math.floor(cnt);\n\t\t\tthis.set({tableItems: arr, pageCurr: nm, pageFrom: pf + (cnt > pf ? 1 : 0)});\n\t\t}\n\t},\n\tonstate({ changed, current, previous }) {\n\t\tthis.setCurrPage();\n\t}\n};\n</script>\n\n<div class=\"tableContect\">\n\t<table class=\"table\">\n\t\t<tr class=\"head\">\n\t\t\t<th class=\"c1\"><input on:click=\"checkReverse(event)\" checked=\"{reverse}\" type=\"checkbox\" value=\"on\"></th>\n\t\t\t<th on:click=\"sort('gmx_id')\"\n\t\t\t\tclass=\"c2 sorting \n\t\t\t\t\t{ sortKey === 'gmx_id' ?\n\t\t\t\t\t\t(sortType === 'desc' ? 'sorting-desc' : 'sorting-asc')\n\t\t\t\t\t\t: '' }\n\t\t\t\t\t\">\n\t\t\t\t<span>Id</span>\n\t\t\t</th>\n\t\t\t<th on:click=\"sort('FRSTAT')\"\n\t\t\t\tclass=\"c3 sorting \n\t\t\t\t\t{ sortKey === 'FRSTAT' ?\n\t\t\t\t\t\t(sortType === 'desc' ? 'sorting-desc' : 'sorting-asc')\n\t\t\t\t\t\t: '' }\n\t\t\t\t\t\">\n\t\t\t\t<span>Статус</span>\n\t\t\t</th>\n\t\t</tr>\n{#each tableItems as it}\n\t\t<tr class=\"item\">\n\t\t\t<td class=\"c1\"><input on:change=\"checkMe(it[hashCols.gmx_id])\" checked=\"{checked[it[hashCols.gmx_id]]}\" type=\"checkbox\"></td>\n\t\t\t<td class=\"c2\"><span>{it[hashCols.gmx_id]}</span></td>\n\t\t\t<td class=\"c3\"><span class=\"status {it[hashCols.FRSTAT] > 0 ? 'checked' : ''}\"></span><span class=\"leaflet-gmx-iconSvg svgIcon\"><svg class=\"svgIcon\"><use xlink:href=\"#zoom-to-feature\"></use></svg></span></td>\n\t\t</tr>\n{/each}\n\t\t<tr class=\"pagination\">\n\t\t\t<td colspan=\"3\">\n\t\t\t\t<button on:click=\"pageTo(pageCurr - 1)\" disabled=\"{ pageCurr === 1 }\">назад</button>\n\t\t\t\t<span class=\"pageInfo\">Стр. <input on:change=\"pageTo(this.value)\" type=\"number\" value=\"{ pageCurr }\" /> из { pageFrom }</span>\n\t\t\t\t<button on:click=\"pageTo(pageCurr + 1)\" disabled=\"{ pageFrom === pageCurr }\">вперед</button>\n\t\t\t\t<div class=\"-loading\">\n\t\t\t\t\t<div class=\"-loading-inner\"></div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</div>\n\n\n<style>\n\n.tableContect table {\n\tborder: 1px solid #d7e1e7;\n\twidth: 100%;\n}\n.tableContect tr:nth-child(odd) {\n\t/* background-color: lightgray;*/\n}\n.tableContect th {\n\tcursor: pointer;\n\tborder-right: 1px solid #d7e1e7;\n\tborder-bottom: 1px solid #d7e1e7;\n}\n\n.tableContect .c1 {\n\twidth: 20px;\n\ttext-align: center;\n}\n.tableContect .c2 {\n\t/* font-weight: bold; */\n}\n.tableContect input {\n    vertical-align: sub;\n}\n.tableContect th.c3 {\n\tborder-right: inherit;\n\twidth: 50px;\n}\n.tableContect span.status {\n    width: 8px;\n    height: 8px;\n\tdisplay: inline-block;\n    border-radius: 50%;\n\tbackground-color: #f96060;\n\tmargin-bottom: 3px;\n}\n.tableContect span.status.checked {\n\tbackground-color: #4de371;\n}\n.tableContect .leaflet-gmx-iconSvg {\n    margin-top: -3px;\n    float: inherit;\n    display: inline-block;\n    box-shadow: inherit;\n\theight: 16px;\n}\n.tableContect .leaflet-gmx-iconSvg svg {\n\theight: 16px;\n}\n.tableContect .pagination td {\n\ttext-align: center;\n\tfont-family: Arial;\n    border-top: 1px solid #d7e1e7;\n    padding-top: 10px;\n}\n.tableContect .pagination input {\n\twidth: 60px;\n\ttext-align: center;\n\tvertical-align: inherit;\n}\n.tableContect .pagination .pageInfo {\n\tmargin: 2px;\n}\n.tableContect th.sorting-asc,\n.tableContect th.sorting-desc {\n\tcolor: rgba(0, 0, 0, 0.87);\n}\n.tableContect th.sorting:after,\n.tableContect th.sorting-asc:after  {\n\tfont-family: 'Material Icons';\n\tfont-weight: normal;\n\tfont-style: normal;\n\tfont-size: 16px;\n\tline-height: 1;\n\tletter-spacing: normal;\n\ttext-transform: none;\n\tdisplay: inline-block;\n\tword-wrap: normal;\n\t-webkit-font-feature-settings: 'liga';\n\t-webkit-font-smoothing: antialiased;\n\tcontent: \"arrow_back\";\n\t-webkit-transform: rotate(90deg);\n\tvisibility: hidden;\n\tvertical-align: middle;\n}\n.tableContect th.sorting:hover:after,\n.tableContect th.sorting-asc:after,\n.tableContect th.sorting-desc:after {\n\tvisibility: visible;\n}\n.tableContect th.sorting-desc:after {\n\tcontent: \"arrow_forward\";\n}\n</style>\n","\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\ttitle: '',\n\t\t\tvalue: '',\n\t\t\tcolName: '',\n\t\t\tclicked: false,\n\t\t\tcols: []\n\t\t};\n\t},\n\tmethods: {\n\t\tsetSelection(val) {\n\t\t\tconst { key } = this.get();\n\t\t\tthis.root.setField(key, {value: '', field: val});\n\t\t},\n\t\tsetValue(val) {\n\t\t\tconst { key } = this.get();\n\t\t\tthis.root.setField(key, {value: val, field: ''});\n\t\t}\n\t},\n\tonstate({ changed, current, previous }) {\n\t\tif(changed.clicked) {\n\t\t\tif(current.clicked) {\n\t\t\t\tconst { cols } = this.get();\n\t\t\t\tthis.setSelection(cols[0]);\n\t\t\t} else {\n\t\t\t\tconst { value } = this.get();\n\t\t\t\tthis.setValue(value);\n\t\t\t}\n\t\t}\n\t},\n\toncreate() {\n\t\tconst { key } = this.get();\n\t\tconst { params } = this.root.get();\n\t\tlet attr = params[key];\n\t\tif (attr.title === undefined) { attr.title = attr.value; }\n\t\tthis.set(attr);\n\t}\n};\n</script>\n\n<div class=\"gmx-sidebar-labeled-block\">\n\t<div class=\"gmx-sidebar-label\">{title}</div>\n\t<div>\n\t\t<div>\n\t\t\t{#if clicked}\n\t\t\t\t<select on:change=\"setSelection(this.options[this.selectedIndex].value)\" name=\"{key}\" class=\"gmx-sidebar-select-with-addon\">\n\t\t\t\t\t{#each cols as it}\n\t\t\t\t\t\t<option value=\"{it}\" selected=\"{colName === it}\">{it}</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t{:else}\n\t\t\t\t<input on:change=\"setValue(event.target.value)\" type=\"text\" class=\"gmx-sidebar-input-with-addon\" name=\"{key}\" value=\"{value}\">\n\t\t\t{/if}\n\t\t\t<button on:click=\"set({clicked: !clicked})\" class=\"gmx-addon-button\" title=\"выбрать из таблицы атрибутов\"></button>\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n\n.gmx-sidebar-labeled-block {\n  margin-top: 4px;\n  padding: 0 10px;\n  width: auto;\n  display: grid;\n  text-align: left;\n}\n.gmx-sidebar-label,\n.gmx-sidebar-label-medium,\n.gmx-sidebar-label-small {\n  font-size: 13px;\n  line-height: 31px;\n  font-family: \"Arial\";\n  padding-left: 0px;\n  color: #777f85;\n}\n.gmx-sidebar-select,\n.gmx-sidebar-select-medium,\n.gmx-sidebar-select-large,\n.gmx-sidebar-select-with-addon,\n.gmx-sidebar-select-with-addon-small {\n  box-sizing: border-box;\n  width: 100px;\n  height: 33px;\n  padding: 0 8px;\n  border-radius: 3px;\n  background-color: #f7fbff;\n  border: 1px solid #d7e1e7;\n}\n\n.gmx-sidebar-select-with-addon,\n.gmx-sidebar-select-with-addon-small {\n  display: table-cell;\n  float: left;\n  width: 85%;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 13px;\n  font-weight: 400;\n}\n\n.gmx-sidebar-input,\n.gmx-sidebar-input-medium,\n.gmx-sidebar-input-large,\n.gmx-sidebar-input-with-addon,\n.gmx-sidebar-input-with-addon-small {\n  box-sizing: border-box;\n  width: 100px;\n  height: 33px;\n  padding: 0 8px;\n  border-radius: 3px;\n  background: #FFF;\n  border: 1px solid rgba(27, 68, 97, 0.3);\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 13px;\n  font-weight: 400;\n}\n\n.gmx-sidebar-input-with-addon,\n.gmx-sidebar-input-with-addon-small {\n  display: table-cell;\n  float: left;\n  width: 85%;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.gmx-addon-button,\n.gmx-addon-button-toggled,\n.gmx-addon-button-medium,\n.gmx-addon-button-medium-toggled {\n  padding: 0 6px;\n  box-sizing: border-box;\n  width: 15%;\n  height: 33px;\n  display: table-cell;\n  vertical-align: middle;\n  background-color: #d7e1e7;\n  border: none;\n  border-radius: 0 3px 3px 0;\n  cursor: pointer;\n  background: url(https://png.icons8.com/ios-glyphs/23/57717d/list.png) no-repeat right #d8e1e8 !important;\n  background-position-x: 50% !important;\n  border-right: 1px solid rgba(27, 68, 97, 0.3);\n  border-top: 1px solid rgba(27, 68, 97, 0.3);\n  border-bottom: 1px solid rgba(27, 68, 97, 0.3);\n}\n\n.gmx-addon-button:focus,\n.gmx-addon-button-toggled:focus,\n.gmx-addon-button-medium:focus,\n.gmx-addon-button-medium-toggled:focus {\n  outline: none;\n}\n\n.gmx-addon-button-toggled {\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);\n}\n\n</style>\n","\n<script>\n\tconst serverBase = window.serverBase || '//maps.kosmosnimki.ru/';\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tparams: {\n\t\t\t\t\tlayerID: {value: '', title: 'Выбор слоя'},\n\t\t\t\t\tquadrantLayerId: {value: '', title: 'Слой квартальной сети'},\n\t\t\t\t\treportType: {value: '', options: ['об использовании лесов', 'о восстановлении лесов'], title: 'Тип отчета'},\n\t\t\t\t\torganizationName: {value: 'Наименование организации'},\n\t\t\t\t\tinn: {value: '1234567890', title: 'ИНН'},\n\t\t\t\t\tregion: {value: 'Субъект', title: 'Субъект Российской Федерации'},\n\t\t\t\t\tforestry: {value: 'Лесничество'},\n\t\t\t\t\tsectionForestry: {value: 'Участковое лесничество'},\n\t\t\t\t\tquadrant: {value: 'Квартал'},\n\t\t\t\t\tstratum: {value: 'Выдел'},\n\t\t\t\t\tfellingForm: {value: '', title: 'Форма рубки'},\n\t\t\t\t\tfellingType: {value: '', title: 'Тип рубки'},\n\t\t\t\t\trecoveryEventType: {value: '', title: 'Тип мероприятия'},\n\t\t\t\t\tsiteArea: {value: 'Площадь'},\n\t\t\t\t\tscale: {value: 'Масштаб'},\n\t\t\t\t\tsite: {value: 'Делянка'}\n\t\t\t\t},\n\t\t\t\tlayerItems: [],\n\t\t\t\tlimit: 0,\n\t\t\t\tlayerID: '',\n\t\t\t\treportType: '',\n\t\t\t\tchecked: {},\n\t\t\t\tlayerIds: [], quadrantIds: [],\n\t\t\t\thashCols: {},\n\t\t\t\tcols: []\n\t\t\t}\n\t\t},\n\t\tcomponents: {\n\t\t\tTable: './Table.html',\n\t\t\tSelectInput: './SelectInput.html'\n\t\t},\n\t\n\t\tmethods: {\n\t\t\tsendReport() {\n\t\t\t\tconst {checked, layerItems, hashCols, params, gmxMap} = this.get();\n\t\t\t\tlet groupRequest = [],\n\t\t\t\t\t// idKey = hashCols.gmx_id,\n\t\t\t\t\tsatLayers = [];\n\n\t\t\t\tgmxMap.layers.forEach((it) => {\n\t\t\t\t\tif (it.getGmxProperties && it._map) {\n\t\t\t\t\t\tlet props = it.getGmxProperties(),\n\t\t\t\t\t\t\tout = {layerId: props.name};\n\t\t\t\t\t\tif (props.Temporal) {\n\t\t\t\t\t\t\tvar dt = it.getDateInterval();\n\t\t\t\t\t\t\tif (dt.beginDate) { out.beginDate = dt.beginDate; }\n\t\t\t\t\t\t\tif (dt.endDate) { out.endDate = dt.endDate; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// out.type = 'оптическая';\n\t\t\t\t\t\t// out.system = 'Sentinel-2';\n\t\t\t\t\t\t// out.resolution = '10 м';\n\t\t\t\t\t\tsatLayers.push(out);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tlayerItems.forEach((it) => {\n\t\t\t\t\tlet id = it[hashCols.gmx_id];\n\t\t\t\t\tif (checked[id]) {\n\t\t\t\t\t\tlet data = {featureID: id};\n\t\t\t\t\t\tObject.entries(params).forEach(([key, val]) => {\n\t\t\t\t\t\t\tlet par = this.changedParams[key] || {};\n\t\t\t\t\t\t\tdata[key] = typeof(par) === 'string' ? par : par.field ? it[hashCols[par.field]] : par.value || val.value;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdata.satLayers = satLayers;\n\t\t\t\t\t\tgroupRequest.push(data);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconsole.log('sendReport ____ ', groupRequest, this.changedParams);\n\t\t\t},\n\t\t\tstartDrawing() {\n\t\t\t\tconsole.log('startDrawing ____ ', this);\n\t\t\t},\n\t\t\tsetField(key, data) {\n\t\t\t\tthis.changedParams[key] = data;\n\t\t\t},\n\t\t\tsetNodeField(node, setFlag) {\n\t\t\t\tlet val = node.options ? node.options[node.selectedIndex].value : node.value;\n\t\t\t\tthis.setField(node.name, val);\n\t\t\t\tif (setFlag) {\n\t\t\t\t\tthis.set({[node.name]: val});\n\t\t\t\t}\n\t\t\t\t// console.log('setField ____ ', data);\n\t\t\t},\n\t\t\tcolsToHash(arr) {\n\t\t\t\treturn arr.reduce((a, v, i) => { a[v] = i; return a; }, {});\n\t\t\t},\n \t\t\tloadFeatures(id) {\n \t\t\t\treturn fetch(`${serverBase}VectorLayer/Search.ashx?layer=${id}&WrapStyle=None`, {\n\t\t\t\t\t\tmode: 'cors',\n\t\t\t\t\t\tcredentials: 'include'\n\t\t\t\t\t})\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(json => {\n// console.log(json)\n\t\t\t\t\t\tif (json.Status === 'ok') {\n\t\t\t\t\t\t\tlet cols = json.Result.fields;\n\t\t\t\t\t\t\tthis.set({cols: cols, hashCols: this.colsToHash(cols),layerItems: json.Result.values});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => console.log(err));\n\t\t\t},\n\t\t\tgetReportsCount() {\n\t\t\t\t// const url = `${serverBase}plugins/forestreport/rest/GetCurrentUserInfo?WrapStyle=None`,\n\t\t\t\t\t// options = {\n\t\t\t\t\t\t// body: JSON.stringify({WrapStyle: 'None'}),\n\t\t\t\t\t\t// method: 'post',\n\t\t\t\t\t\t// mode: 'cors',\n\t\t\t\t\t\t// credentials: 'include'\n\t\t\t\t\t\t// ,\n\t\t\t\t\t\t// headers: {\n\t\t\t\t\t\t\t// 'Accept': 'application/json'\n\t\t\t\t\t\t// }\n\t\t\t\t\t// };\n\n\t\t\t\treturn fetch(`${serverBase}plugins/forestreport/rest/GetCurrentUserInfo?WrapStyle=None`, {\n\t\t\t\t\t\tmode: 'cors',\n\t\t\t\t\t\tcredentials: 'include'\n\t\t\t\t\t})\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(json => {\n\t\t\t\t\t\tif (json.Status === 'ok') {\n\t\t\t\t\t\t\tlet count = json.Result.limit - json.Result.used;\n\t\t\t\t\t\t\tthis.set({limit: count > 0 ? count : 0});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => console.log(err));\n\t\t\t}\n\t\t},\n\t\t\n\t\toncreate() {\n\t\t\tthis.changedParams = {};\n\t\t\tconst { meta, gmxMap } = this.get();\n\t\t\tthis.getReportsCount();\nconsole.log('in oncreate', gmxMap);\n\t\t\tlet layerIds = [], quadrantIds = [];\n\t\t\tgmxMap.layers.forEach((it) => {\n\t\t\t\tif (it.getGmxProperties) {\n\t\t\t\t\tlet props = it.getGmxProperties(),\n\t\t\t\t\t\tmetaProps = props.MetaProperties || {};\n\t\t\t\t\tif (\n\t\t\t\t\t\tprops.type.toLowerCase() === 'vector' &&\n\t\t\t\t\t\tprops.GeometryType.toLowerCase() === 'polygon' &&\n\t\t\t\t\t\t!props.IsRasterCatalog &&\n\t\t\t\t\t\t!props.Quicklook\n\t\t\t\t\t\t) {\n\t\t\t\t\t\tlet hash = {id: props.name, title: props.title};\n\t\t\t\t\t\tif (meta) {\n\t\t\t\t\t\t\tif (metaProps.forest && metaProps.forest.Value === 'true') {\n\t\t\t\t\t\t\t\tlayerIds.push(hash);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (metaProps.quadrant && metaProps.quadrant.Value === 'true') {\n\t\t\t\t\t\t\t\tquadrantIds.push(hash);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlayerIds.push(hash);\n\t\t\t\t\t\t\tquadrantIds.push(hash);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.set({layerIds: layerIds, quadrantIds: quadrantIds, cols: []});\n\t\t},\n\n\t\tonstate({ changed, current, previous }) {\nconsole.log('in onstate', this);\n\t\t\tif (changed.layerID && current.layerID) {\n\t\t\t\tthis.loadFeatures(current.layerID);\n\t\t\t}\n\t\t\t// if (changed.reportType) {\n\t\t\t\t// this.setField('reportType', {value: current.reportType});\n\t\t\t\t//this.changedParams[key] = data;\n\t\t\t// }\n\t\t}\n/*\n\t\t// preload({ params, query }) {\n\t\t\t// const { slug } = params;\n\n\t\t\t// return this.fetch(`${serverBase}plugins/forestreport/rest/GetCurrentUserInfo`)\n\t\t\t\t// .then(r => r.json()).then(post => {\n\t\t\t\t\t// return { post };\n\t\t\t\t// });\n\t\t// },\n        helpers: {\n           // collect\n\t\t},\n\t\t,\n\n\t\tonupdate({ changed, current, previous }) {\n\t\t\tconsole.log('in onupdate', this);\n\t\t\tvar tt = 1;\n\t\t\tconst { currentPerPage, searchInput, selectedPage, rows } = current;\n\t\t\t// if (changed.currentPerPage) {\n\t\t\t\t// this.getPaged({size: currentPerPage});\n\t\t\t// }\t        \n\t\t\t// if (changed.searchInput) {\n\t\t\t\t// debounce((x) => {\n\t\t\t\t\t// console.log('searchInput changed', x);\n\t\t\t\t\t// this.getPaged({ searchText: x });\n\t\t\t\t// }, 250)();\n\t\t\t// }\t        \n\t\t\t// if (changed.selectedPage) {\n\t\t\t\t// const newPage = selectedPage + 1;\n\t\t\t\t// this.getPaged({ page: newPage }, x => x.page != newPage);\n\t\t\t// }   \t        \n\t\t},\n\t\tondestroy() {\n\t\t\tconsole.log('in ondestroy', this);\n\t\t}\n*/\n\t}\n</script>\n\n<div data-reactroot=\"\" class=\"forest-plugin-container\">\n\t<div class=\"forest-plugin-header\">Отчет об использовании лесов</div>\n\t<div class=\"forest-plugin-header\">Лимит отчетов: {limit}</div>\n\t<div class=\"gmx-select-layer-container\">\n\t\t<span class=\"gmx-select-layer-container__label\">Выбор слоя</span>\n\t\t<select on:change=\"setNodeField(this, true)\" name=\"layerID\" class=\"gmx-sidebar-select-medium\">\n\t\t\t<option value=\"\"></option>\n\t\t\t{#if layerIds}\n\t\t\t\t{#each layerIds as it}\n\t\t\t\t\t<option value=\"{it.id}\" selected=\"{layerID === it.id}\">{it.title}</option>\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</select>\n\t</div>\n{#if layerID}\n\t<div class=\"leftContent forest-plugin-content\">\n\t\t<div>\n\t\t\t<div class=\"gmx-sidebar-label-medium\">Ввод информации</div>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"gmx-sidebar-labeled-block\">\n\t\t\t\t\t\t<div class=\"gmx-sidebar-label\">{params.reportType.title}</div>\n\t\t\t\t\t\t<select on:change=\"setNodeField(this, true)\" name=\"reportType\" class=\"gmx-sidebar-select-large\">\n{#each params.reportType.options as it}\n\t\t\t\t\t\t\t\t<option value=\"{it}\">{it}</option>\n{/each}\n\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n{#if reportType !== 'о восстановлении лесов'}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<SelectInput key=\"fellingForm\" cols=\"{cols}\" />\n\t\t\t\t\t\t<SelectInput key=\"fellingType\" cols=\"{cols}\" />\n\t\t\t\t\t</div>\n{/if}\n\t\t\t\t\t<div class=\"gmx-sidebar-labeled-block\">\n\t\t\t\t\t\t<div class=\"gmx-sidebar-label-small\">{params.organizationName.title || params.organizationName.value}</div>\n\t\t\t\t\t\t<input on:change=\"setNodeField(this)\" name=\"organizationName\" value=\"{params.organizationName.value}\" type=\"text\" class=\"gmx-sidebar-input-large\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"gmx-sidebar-labeled-block\">\n\t\t\t\t\t\t<div class=\"gmx-sidebar-label-small\">{params.inn.title || params.inn.value}</div>\n\t\t\t\t\t\t<input on:change=\"setNodeField(this)\" name=\"inn\" value=\"{params.inn.value}\" type=\"text\" class=\"gmx-sidebar-input-large\">\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<SelectInput key=\"region\" cols=\"{cols}\" />\n\t\t\t\t\t<SelectInput key=\"forestry\" cols=\"{cols}\" />\n\t\t\t\t\t<SelectInput key=\"sectionForestry\" cols=\"{cols}\" />\n\t\t\t\t\t<SelectInput key=\"quadrant\" cols=\"{cols}\" />\n\t\t\t\t\t<SelectInput key=\"stratum\" cols=\"{cols}\" />\n\t\t\t\t\t<SelectInput key=\"site\" cols=\"{cols}\" />\n\t\t\t\t\t<SelectInput key=\"recoveryEventType\" cols=\"{cols}\" />\n\t\t\t\t\t<SelectInput key=\"siteArea\" cols=\"{cols}\" />\n\t\t\t\t\t<SelectInput key=\"scale\" cols=\"{cols}\" />\n\n\t\t\t\t\t<div class=\"gmx-sidebar-labeled-block\">\n\t\t\t\t\t\t<div class=\"gmx-sidebar-label\">{params.quadrantLayerId.title || params.quadrantLayerId.value}</div>\n\t\t\t\t\t\t<select on:change=\"setNodeField(this, true)\" name=\"quadrantLayerId\" class=\"gmx-sidebar-select-large\">\n\t\t\t\t\t\t\t<option value=\"\"></option>\n{#if quadrantIds}\n\t{#each quadrantIds as it}\n\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\tvalue=\"{it.id}\"\n\t\t\t\t\t\t\t\t\t\tselected=\"{quadrantLayerId === it.id}\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{it.title}\n\t\t\t\t\t\t\t\t\t</option>\n\t{/each}\n{/if}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"gmx-sidebar-label-medium\">Список объектов</div>\n\t\t\t<div class=\"forest-features-block\">\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"gmx-geometry-select-container\"><button on:click=\"startDrawing()\" class=\"gmx-sidebar-button\">Выделите участки полигоном</button></div>\n\t\t\t\t\t<div class=\"gmx-sidebar-label-medium\">Выделено: {Object.keys(checked).length} / {layerItems.length}</div>\n\t\t\t\t\t<Table items=\"{layerItems}\" hashCols=\"{hashCols}\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"gmx-button-container\"><button on:click=\"sendReport()\" class=\"gmx-sidebar-button{Object.keys(checked).length ? '' : '-disabled'}\">Создать отчеты</button></div>\n\t\t</div>\n\t</div>\n{/if}\n</div>\n\n<style>\n    \n\th1 {\n\t\tcolor: black;\n\t}\n.gmx-sidebar-container {\n  width: 100%;\n  height: 40px;\n  margin: 10px 0;\n}\n.gmx-button-container {\n  width: 100%;\n  height: 40px;\n  margin: 10px 0;\n}\n\n.gmx-button-container button {\n  display: block;\n  margin: 0 auto;\n}.gmx-sidebar-select,\n.gmx-sidebar-select-medium,\n.gmx-sidebar-select-large,\n.gmx-sidebar-select-with-addon,\n.gmx-sidebar-select-with-addon-small {\n  box-sizing: border-box;\n  width: 100px;\n  height: 33px;\n  padding: 0 8px;\n  border-radius: 3px;\n  background-color: #f7fbff;\n  border: 1px solid #d7e1e7;\n}\n\n.gmx-sidebar-select-medium {\n  background-position-x: 99% !important;\n  background-size: 25px 25px !important;\n  width: 200px;\n  height: 30px;\n  float: right;\n  margin-right: 10px;\n  margin-top: 5px;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 13px;\n  font-weight: 400;\n  text-align: left;\n  padding-right: 40px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.gmx-sidebar-select-large {\n  width: 100%;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 13px;\n  font-weight: 400;\n}\n\n.gmx-sidebar-select-with-addon,\n.gmx-sidebar-select-with-addon-small {\n  display: table-cell;\n  float: left;\n  width: 85%;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 13px;\n  font-weight: 400;\n}\n\n.gmx-sidebar-select-with-addon-small {\n  width: 60%;\n}.gmx-select-layer-container {\n  width: 100%;\n  height: 40px;\n  background-color: #ebf1f5;\n  border-bottom: 1px solid #bbb;\n}\n\n.gmx-select-layer-container__label {\n  width: 30%;\n  height: 22px;\n  padding: 0 10px;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 31px;\n  color: #5b7284;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 15px;\n  font-weight: 600;\n  line-height: 38px;\n  text-align: left;\n}.gmx-icon {\n  width: 20px;\n  height: 20px;\n  text-align: center;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 24px;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.gmx-icon:hover {\n  fill: red;\n}\n\n#zoom-to-feature polygon {\n  cursor: pointer;\n}\n\n#zoom-to-feature polygon:hover {\n  fill: red;\n}\n\n#show-preview {\n  cursor: pointer;\n}\n\n#show-preview:hover {\n  fill: black;\n}\n\n.forest-plugin-container {\n  font-family: \"Roboto\";\n  border-collapse: collapse;\n  padding-bottom: 17px;\n}\n\n.forest-plugin-header {\n  height: 40px;\n  line-height: 40px;\n  padding-left: 10px;\n  background-color: #ebf1f5;\n  font-size: 18px;\n  font-weight: bold;\n  color: #5b7284;\n  font-family: Arial;\n  color: #181f25;\n  font-size: 15px;\n  font-weight: 600;\n  text-align: left;\n  border-bottom: 1px solid #bbb;\n}\n\n.gmx-sidebar-labeled-block {\n  margin-top: 4px;\n  padding: 0 10px;\n  width: auto;\n  display: grid;\n  text-align: left;\n}\n\n.forest-loader-holder {\n  font-family: \"Roboto\";\n  width: 100%;\n  text-align: center;\n}\n\n.forest-features-block {\n  padding: 0 10px;\n}\n\ndiv[data-pane-id=\"forest-project\"] {\n  overflow-y: auto;\n}\n\n.forest-plugin-content {\n  width: 100%;\n  height: 90%;\n  background-color: #f5f8fa;\n  overflow-y: auto;\n}\n\n.forest-loader-holder {\n  padding: 10px;\n  text-align: center;\n}\n\n.width-setting {\n  vertical-align: middle;\n}\n\n.reset {\n  width: 120px;\n  margin: auto;\n}\n\n.div-table {\n  margin: 8 0;\n  display: table;\n  width: auto;\n}\n\n.div-table-row {\n  display: table-row;\n  width: auto;\n  clear: both;\n}\n\n.div-table-col {\n  float: left;\n  display: table-column;\n  width: 120px;\n  max-width: 120px;\n}\n\n.div-table-col input {\n  width: 120px;\n  margin: 0;\n}\n\n.div-table-col .width-type {\n  text-align: left;\n}\n\n.gmx-features-list {\n  max-height: 400px;\n  margin-bottom: 10px;\n  background-color: #fff;\n  text-align: center;\n  width: 332px;\n}\n\n.gmx-features-list:focus {\n  outline: none;\n}\n\n.feature-list-item {\n  line-height: 20px;\n  height: 20px;\n}\n\n.feature-list-item.active {\n  background-color: #eee;\n  padding: 0;\n}\n\n.feature-list-item-part {\n  width: 33%;\n  text-align: center;\n}\n\n.forest-plugin-container .highlight.bottom-selection {\n  border-right: 5px dotted;\n}\n\n.forest-plugin-container .control-label {\n  font-size: 16px;\n  padding: 4px;\n}\n\n.forest-plugin-container select {\n  border: 1px solid rgba(27, 68, 97, 0.3) !important;\n  outline: 0px;\n  -moz-appearance: none;\n  /* Firefox */\n  -webkit-appearance: none;\n  /* Safari and Chrome */\n  appearance: none;\n  background: url(https://png.icons8.com/material/34/57798c/sort-down.png) no-repeat right #FFF !important;\n  background-position-x: 98% !important;\n}\n\n.forest-plugin-container select:-moz-focusring {\n  color: transparent;\n  text-shadow: 0 0 0 #000;\n}\n\n.forest-plugin-container option:not(:checked) {\n  color: #49677d;\n}\n\n.forest-plugin-container .form-control {\n  padding: 0 10px;\n  line-height: 1.42857143;\n  color: #49677d;\n  font-weight: 500;\n  border: 1px solid rgba(27, 68, 97, 0.3) !important;\n  height: 34px;\n  font-size: 14px;\n  line-height: 1.42857143;\n  background-color: #fff;\n  background-image: none;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;\n  -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\n  transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\n}\n\n.forest-plugin-container .input-group,\n.forest-plugin-container .form-control {\n  display: table-cell;\n}\n\n.forest-plugin-container .input-group {\n  display: block;\n  width: 100%;\n}\n\n.forest-plugin-container .btn {\n  margin: auto;\n  display: block;\n  padding: 6px 12px;\n  margin-bottom: 0;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.42857143;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  background-image: none;\n  border: 1px solid transparent;\n  border-radius: 4px;\n}\n\n.forest-plugin-container .input-group .form-control {\n  display: inline-block;\n  width: 90%;\n  box-sizing: border-box;\n  border-top-right-radius: 0px;\n  border-bottom-right-radius: 0px;\n}\n\n.forest-plugin-container .input-group .btn {\n  padding: 0;\n  display: inline-block;\n  line-height: 34px;\n  margin: 0;\n  width: 10%;\n  box-sizing: border-box;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n}\n\n.forest-plugin-container .btn.active {\n  box-shadow: inset 0 1px 4px rgba(27, 31, 35, 0.55);\n}\n\n.input-group-addon {\n  font-weight: normal;\n  line-height: 1;\n  text-align: center;\n}\n\n.forest-plugin-container .glyphicon {\n  position: relative;\n  top: 1px;\n  display: inline-block;\n  font-family: 'Glyphicons Halflings';\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.forest-plugin-containeroption {\n  color: #49677d !important;\n}\n\n.forest-select-block {\n  padding: 0 10px;\n  margin: 10px 0;\n  width: auto;\n  display: grid;\n  text-align: left;\n}\n\n.forest-plugin-container .checkbox label,\n.forest-plugin-container .radio label {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.forest-plugin-container .checkbox,\n.forest-plugin-container .radio {\n  position: relative;\n  display: block;\n}\n\n.feature-list-item.active {\n  background-color: #eee;\n}\n\n.feature-list-item-part {\n  width: 25%;\n  display: inline-block;\n}\n\n.forest-plugin-container .btn.btn-default.input-group-btn {\n  cursor: pointer;\n  border: 1px solid rgba(73, 103, 125, 0.2);\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  background: url(https://png.icons8.com/material/16/ffffff/outline.png) no-repeat right rgba(73, 103, 125, 0.7) !important;\n  background-position-x: 58% !important;\n  transition: all 0.23s ease;\n}\n\n.forest-plugin-container .btn.btn-default.input-group-btn:hover {\n  background: url(https://png.icons8.com/material/16/ffffff/outline.png) no-repeat right rgba(73, 103, 125, 0.5) !important;\n  background-position-x: 58% !important;\n}\n\n.forest-plugin-container .collapser-block {\n  padding: 10px;\n}\n\n.forest-plugin-container .opening-panel {\n  cursor: pointer;\n}\n\n.forest-plugin-container .opening-panel:hover {\n  background-color: #efefef;\n}\n\n.forest-plugin-container .panel {\n  margin-bottom: 20px;\n  background-color: #fff;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n}\n\n.forest-plugin-container .panel-default {\n  border-color: #ddd;\n}\n\n.forest-plugin-container .panel-body {\n  padding: 15px;\n}\n\n.ReactVirtualized__Grid.ReactVirtualized__List {\n  padding: 10px;\n  width: 100%;\n}\n\n.ReactVirtualized__Grid__innerScrollContainer {\n  width: 100%;\n  max-width: 100%;\n}.gmx-table-icon-container {\n  width: 16px;\n  height: 16px;\n  margin: auto;\n  cursor: pointer;\n}\n\n.gmx-status-indicator,\n.gmx-status-indicator-bad,\n.gmx-status-indicator-mean,\n.gmx-status-indicator-good {\n  width: 8px;\n  height: 8px;\n  line-height: 24px;\n  border-radius: 50%;\n  margin: 0 auto;\n}\n\n.gmx-status-indicator-bad {\n  background-color: #f96060;\n}\n\n.gmx-status-indicator-mean {\n  background-color: #f9de60;\n}\n\n.gmx-status-indicator-good {\n  background-color: #4de371;\n}\n\n.gmx-table-icon {\n  width: 100%;\n  height: 100%;\n}\n\n.gmx-table-icon:hover {\n  fill: #70cbe0;\n}.gmx-geometry-select-container {\n  width: 100%;\n  height: 40px;\n}\n\n.gmx-geometry-select-container button {\n  display: block;\n  margin: 0 auto;\n  width: 100%;\n  margin-top: 15px;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 31.249px;\n  text-align: center;\n  border: 1px solid rgba(27, 68, 97, 0.3);\n  background: url(./ext/polygon.png) no-repeat #d8e1e8;\n  background-position: 4%;\n  padding-left: 30px;\n  transition: all 0.25s ease;\n}\n\n.gmx-geometry-select-container button:hover {\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);\n}\n.gmx-checkbox-container {\n  margin: auto;\n  padding-top: 5px;\n  padding-left: 10px;\n  font-family: Arial;\n  color: #5baceb;\n  font-size: 13px;\n  font-weight: 600;\n  align-items: center;\n  display: flex;\n}.gmx-table-icon-container {\n  width: 16px;\n  height: 16px;\n  margin: auto;\n  cursor: pointer;\n}\n\n.gmx-status-indicator,\n.gmx-status-indicator-bad,\n.gmx-status-indicator-mean,\n.gmx-status-indicator-good {\n  width: 8px;\n  height: 8px;\n  line-height: 24px;\n  border-radius: 50%;\n  margin: 0 auto;\n}\n\n.gmx-status-indicator-bad {\n  background-color: #f96060;\n}\n\n.gmx-status-indicator-mean {\n  background-color: #f9de60;\n}\n\n.gmx-status-indicator-good {\n  background-color: #4de371;\n}\n\n.gmx-table-icon {\n  width: 100%;\n  height: 100%;\n}\n\n.gmx-table-icon:hover {\n  fill: #70cbe0;\n}\n\n.ReactTable {\n  position: relative;\n  border: 1px solid #d7e1e7;\n  min-width: 100%;\n}\n\n.ReactTable * {\n  box-sizing: border-box;\n  margin-bottom: 3px;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 13px;\n  font-weight: 400;\n}\n\n.ReactTable .rt-table {\n  -webkit-box-align: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  width: 100%;\n  border-collapse: collapse;\n  overflow: auto;\n  background-color: #ffffff;\n}\n\n.ReactTable .rt-thead {\n  border-collapse: collapse;\n  cursor: pointer;\n  width: 100%;\n  height: 30px;\n  border-radius: 3px;\n  background-color: #f7fbff;\n}\n\n.ReactTable .rt-th {\n  border: 1px solid #d7e1e7;\n}\n\n.ReactTable .rt-th,\n.ReactTable .rt-td {\n  display: table-cell;\n}\n\n.ReactTable .rt-resizable-header-content {\n  text-align: center;\n}\n\n.ReactTable .rt-resizable-header-content,\n.ReactTable .rt-td {\n  padding: 0;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 13px;\n  font-weight: 400;\n}\n\n.ReactTable .-pagination {\n  display: table;\n  width: 100%;\n}\n\n.ReactTable .-pagination button {\n  padding: 0 6px;\n  margin-bottom: -6px;\n  margin-top: -3px;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.ReactTable .-previous,\n.ReactTable .-center,\n.ReactTable .-next {\n  display: table-cell;\n}\n\n.ReactTable .-center {\n  padding: 0 10px;\n  text-align: center;\n}\n\n.ReactTable .-pageJump {\n  width: 40%;\n  display: inline-block;\n}\n\n.ReactTable .-pageJump input {\n  width: 70%;\n}\n\n.ReactTable .-pagination button {\n  height: 40px;\n  border-radius: 3px;\n  background-color: #d7e1e7;\n  border: 1px solid #d7e1e7;\n  cursor: pointer;\n}.gmx-sidebar-input,\n.gmx-sidebar-input-medium,\n.gmx-sidebar-input-large,\n.gmx-sidebar-input-with-addon,\n.gmx-sidebar-input-with-addon-small {\n  box-sizing: border-box;\n  width: 100px;\n  height: 33px;\n  padding: 0 8px;\n  border-radius: 3px;\n  background: #FFF;\n  border: 1px solid rgba(27, 68, 97, 0.3);\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 13px;\n  font-weight: 400;\n}\n\n.gmx-sidebar-input-medium {\n  width: 200px;\n}\n\n.gmx-sidebar-input-large {\n  width: 100%;\n  background: #FFF;\n  border: 1px solid rgba(27, 68, 97, 0.3) !important;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 13px;\n  font-weight: 400;\n  line-height: 31.249px;\n  text-align: left;\n}\n\n.gmx-sidebar-input-with-addon,\n.gmx-sidebar-input-with-addon-small {\n  display: table-cell;\n  float: left;\n  width: 85%;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.gmx-sidebar-input-with-addon-small {\n  width: 60%;\n}.gmx-sidebar-label,\n.gmx-sidebar-label-medium,\n.gmx-sidebar-label-small {\n  font-size: 13px;\n  line-height: 31px;\n  font-family: \"Arial\";\n  padding-left: 0px;\n  color: #777f85;\n}\n\n.gmx-sidebar-label-medium {\n  font-size: 16px;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 31.249px;\n  text-align: left;\n  top: 10px;\n  position: relative;\n  padding-bottom: 10px;\n  padding-left: 10px;\n}\n\n.gmx-sidebar-label-small {\n  font-size: 13px;\n}.gmx-addon-button,\n.gmx-addon-button-toggled,\n.gmx-addon-button-medium,\n.gmx-addon-button-medium-toggled {\n  padding: 0 6px;\n  box-sizing: border-box;\n  width: 15%;\n  height: 33px;\n  display: table-cell;\n  vertical-align: middle;\n  background-color: #d7e1e7;\n  border: none;\n  border-radius: 0 3px 3px 0;\n  cursor: pointer;\n  background: url(https://png.icons8.com/ios-glyphs/23/57717d/list.png) no-repeat right #d8e1e8 !important;\n  background-position-x: 50% !important;\n  border-right: 1px solid rgba(27, 68, 97, 0.3);\n  border-top: 1px solid rgba(27, 68, 97, 0.3);\n  border-bottom: 1px solid rgba(27, 68, 97, 0.3);\n}\n\n.gmx-addon-button:focus,\n.gmx-addon-button-toggled:focus,\n.gmx-addon-button-medium:focus,\n.gmx-addon-button-medium-toggled:focus {\n  outline: none;\n}\n\n.gmx-addon-button-toggled {\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);\n}\n\n.gmx-addon-button-medium {\n  background: none !important;\n  background-color: #d7e1e7;\n  width: 40%;\n  cursor: pointer;\n  font-family: Arial;\n  color: #5b7284;\n  font-size: 13px;\n  font-weight: 500;\n}\n\n.gmx-addon-button-medium:focus {\n  outline: none;\n}\n\n.gmx-addon-button-medium-toggled {\n  background: none;\n  background-color: #d7e1e7;\n  box-shadow: inset 0 1px 4px rgba(27, 31, 35, 0.55);\n}\n\n.gmx-addon-button-medium[disabled] {\n  cursor: default;\n}\n\n.gmx-sidebar-button,\n.gmx-sidebar-button-toggled,\n.gmx-sidebar-button-error,\n.gmx-sidebar-button-disabled {\n  border-radius: 3px;\n  padding: 0 6px;\n  border: 1px solid #d7e1e7;\n  cursor: pointer;\n  background-color: #5baceb;\n  width: 94%;\n  height: 47px;\n  color: #FFF;\n  font-family: Arial;\n  font-size: 17px;\n  font-weight: 600;\n}\n\n.gmx-sidebar-button:focus,\n.gmx-sidebar-button-toggled:focus,\n.gmx-sidebar-button-error:focus,\n.gmx-sidebar-button-disabled:focus {\n  outline: none;\n}\n\n.gmx-sidebar-button-toggled {\n  box-shadow: inset 0 1px 4px rgba(27, 31, 35, 0.55);\n}\n\n.gmx-sidebar-button-error {\n  color: red;\n}\n\n.gmx-sidebar-button-disabled {\n  pointer-events: none;\n  background-color: #efefef;\n  cursor: default;\n}\n</style>\n"],"names":["noop","assign","tar","src","k","assignTrue","callAfter","fn","i","appendNode","node","target","appendChild","insertNode","anchor","insertBefore","detachNode","parentNode","removeChild","destroyEach","iterations","detach","length","d","createElement","name","document","createText","data","createTextNode","createComment","addListener","event","handler","addEventListener","removeListener","removeEventListener","setAttribute","attribute","value","setData","text","init","component","options","_handlers","Object","create","_bind","root","store","run","callAll","fns","shift","proto","this","destroy","fire","set","_fragment","_state","eventName","handlers","slice","__calling","call","push","cancel","index","indexOf","splice","newState","_set","_lock","_beforecreate","_oncreate","_aftercreate","_recompute","oldState","changed","dirty","key","_differs","current","previous","p","a","b","sort","get","sortType","sortKey","setCurrPage","checkReverse","ev","let","nChecked","ctrlKey","isChecked","checked","nm","hashCols","gmx_id","items","forEach","it","id","checkMe","sortMe","arr","x","y","pageTo","pageCurr","pageFrom","beg","pagesize","cnt","pf","Math","floor","tableItems","ref","FRSTAT","reverse","clicked","setSelection","cols","setValue","colName","selectedIndex","title","attr","undefined","val","setField","field","const","serverBase","window","sendReport","groupRequest","satLayers","layers","getGmxProperties","_map","props","out","layerId","Temporal","dt","getDateInterval","beginDate","endDate","layerItems","featureID","entries","params","par","changedParams","console","log","startDrawing","setNodeField","setFlag","colsToHash","reduce","v","loadFeatures","fetch","mode","credentials","then","res","json","Status","Result","fields","values","catch","err","getReportsCount","count","limit","used","layerID","layerIds","quadrantLayerId","quadrantIds","reportType","organizationName","inn","keys","region","forestry","sectionForestry","quadrant","stratum","fellingForm","fellingType","recoveryEventType","siteArea","scale","site","gmxMap","metaProps","MetaProperties","type","toLowerCase","GeometryType","IsRasterCatalog","Quicklook","hash","meta","forest","Value"],"mappings":"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"}